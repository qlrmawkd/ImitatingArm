//==============================================================================
//						Communication & Command 함수들
//==============================================================================
// CodeVisionAVR C Compiler
// (C) 1998-2004 Pavel Haiduc, HP InfoTech S.R.L.
// I/O registers definitions for the ATmega128
#pragma used+
sfrb PINF=0;
sfrb PINE=1;
sfrb DDRE=2;
sfrb PORTE=3;
sfrb ADCL=4;
sfrb ADCH=5;
sfrw ADCW=4;      // 16 bit access
sfrb ADCSRA=6;
sfrb ADMUX=7;
sfrb ACSR=8;
sfrb UBRR0L=9;
sfrb UCSR0B=0xa;
sfrb UCSR0A=0xb;
sfrb UDR0=0xc;
sfrb SPCR=0xd;
sfrb SPSR=0xe;
sfrb SPDR=0xf;
sfrb PIND=0x10;
sfrb DDRD=0x11;
sfrb PORTD=0x12;
sfrb PINC=0x13;
sfrb DDRC=0x14;
sfrb PORTC=0x15;
sfrb PINB=0x16;
sfrb DDRB=0x17;
sfrb PORTB=0x18;
sfrb PINA=0x19;
sfrb DDRA=0x1a;
sfrb PORTA=0x1b;
sfrb EECR=0x1c;
sfrb EEDR=0x1d;
sfrb EEARL=0x1e;
sfrb EEARH=0x1f;
sfrw EEAR=0x1e;   // 16 bit access
sfrb SFIOR=0x20;
sfrb WDTCR=0x21;
sfrb OCDR=0x22;
sfrb OCR2=0x23;
sfrb TCNT2=0x24;
sfrb TCCR2=0x25;
sfrb ICR1L=0x26;
sfrb ICR1H=0x27;
sfrw ICR1=0x26;   // 16 bit access
sfrb OCR1BL=0x28;
sfrb OCR1BH=0x29;
sfrw OCR1B=0x28;  // 16 bit access
sfrb OCR1AL=0x2a;
sfrb OCR1AH=0x2b;
sfrw OCR1A=0x2a;  // 16 bit access
sfrb TCNT1L=0x2c;
sfrb TCNT1H=0x2d;
sfrw TCNT1=0x2c;  // 16 bit access
sfrb TCCR1B=0x2e;
sfrb TCCR1A=0x2f;
sfrb ASSR=0x30;
sfrb OCR0=0x31;
sfrb TCNT0=0x32;
sfrb TCCR0=0x33;
sfrb MCUCSR=0x34;
sfrb MCUCR=0x35;
sfrb TIFR=0x36;
sfrb TIMSK=0x37;
sfrb EIFR=0x38;
sfrb EIMSK=0x39;
sfrb EICRB=0x3a;
sfrb RAMPZ=0x3b;
sfrb XDIV=0x3c;
sfrb SPL=0x3d;
sfrb SPH=0x3e;
sfrb SREG=0x3f;
#pragma used-
// Interrupt vectors definitions
// CodeVisionAVR C Compiler
// (C) 1998-2005 Pavel Haiduc, HP InfoTech S.R.L.
// Prototypes for string functions
#pragma used+
char *strcat(char *str1,char *str2);
char *strcatf(char *str1,char flash *str2);
char *strchr(char *str,char c);
signed char strcmp(char *str1,char *str2);
signed char strcmpf(char *str1,char flash *str2);
char *strcpy(char *dest,char *src);
char *strcpyf(char *dest,char flash *src);
unsigned char strcspn(char *str,char *set);
unsigned char strcspnf(char *str,char flash *set);
unsigned int strlenf(char flash *str);
char *strncat(char *str1,char *str2,unsigned char n);
char *strncatf(char *str1,char flash *str2,unsigned char n);
signed char strncmp(char *str1,char *str2,unsigned char n);
signed char strncmpf(char *str1,char flash *str2,unsigned char n);
char *strncpy(char *dest,char *src,unsigned char n);
char *strncpyf(char *dest,char flash *src,unsigned char n);
char *strpbrk(char *str,char *set);
char *strpbrkf(char *str,char flash *set);
signed char strpos(char *str,char c);
char *strrchr(char *str,char c);
char *strrpbrk(char *str,char *set);
char *strrpbrkf(char *str,char flash *set);
signed char strrpos(char *str,char c);
char *strstr(char *str1,char *str2);
char *strstrf(char *str1,char flash *str2);
unsigned char strspn(char *str,char *set);
unsigned char strspnf(char *str,char flash *set);
char *strtok(char *str1,char flash *str2);
 unsigned int strlen(char *str);
void *memccpy(void *dest,void *src,char c,unsigned n);
void *memchr(void *buf,unsigned char c,unsigned n);
signed char memcmp(void *buf1,void *buf2,unsigned n);
signed char memcmpf(void *buf1,void flash *buf2,unsigned n);
void *memcpy(void *dest,void *src,unsigned n);
void *memcpyf(void *dest,void flash *src,unsigned n);
void *memmove(void *dest,void *src,unsigned n);
void *memset(void *buf,unsigned char c,unsigned n);
#pragma used-
#pragma library string.lib
//==============================================================================
// 하드웨어 의존적인 정의들
//==============================================================================
// 배터리 기준 전압 -----------------------------------------------
//#define	U_T_OF_POWER		12000		// 리튬폴리머 11.1V 배터리용
//#define	M_T_OF_POWER		9800
//#define	L_T_OF_POWER		9700
//==============================================================================
//						플랫폼(로봇 형태) 관련
//==============================================================================
//==============================================================================
//						버튼 관련
//==============================================================================
//==============================================================================
//						에러 코드(F_ERR_CODE에 저장)
//==============================================================================
//==============================================================================
//						UART 통신 관련
//==============================================================================
//==============================================================================
//						A/D 관련
//==============================================================================
//==============================================================================
//						액션/모션 관련
//==============================================================================
//==============================================================================
//						IR 리모컨 관련
//==============================================================================
//==============================================================================
// DATA TYPE
//==============================================================================
//==============================================================================
// BIT SET
//==============================================================================
//==============================================================================
// BIT CLEAR
//==============================================================================
//==============================================================================
// BIT CHECK
//==============================================================================
//==============================================================================
// BIT MASK
//==============================================================================
void sciTx0Data(unsigned char td);
void sciTx1Data(unsigned char td);
unsigned char sciRx0Ready(void);
unsigned char sciRx1Ready(void);
void SendOperCmd(unsigned char Data1,unsigned char Data2);
void SendSetCmd(unsigned char ID, unsigned char Data1, unsigned char Data2, unsigned char Data3);
void PosSend(unsigned char ID, unsigned char SpeedLevel, unsigned char Position);
void PassiveModeCmdSend(unsigned char ID);
void BreakModeCmdSend(void);
void BoundSetCmdSend(unsigned char ID, unsigned char B_U, unsigned char B_L);
void SyncPosSendTune(void);
void SyncPosSend(void);
unsigned int PosRead(unsigned char ID);
void SendToSoundIC(unsigned char cmd);
void SendToPC(unsigned char Cmd, unsigned char CSize);
void MotionTweenFlash(unsigned char GapMax);
void GetMotionFromFlash(void);
void SendTGain(void);
void SendExPortD(void);
void GetSceneFromFlash(void);
void CalcFrameInterval(void);
void CalcUnitMove(void);
void MakeFrame(void);
void SendFrame(void);
void GetPose(void);
void BasicPose(unsigned char PF, unsigned int NOF, unsigned int RT, unsigned char TQ);
void M_Play(unsigned char BtnCode);
//==========================================================
// Project : [ HunoBasic ]
// SoftWare : Motion Builder v1.13 beta
// Date,Time : 2008-08-19 오전 11:37:46
// Format : ME_FMT#1
// Number of Motions : 10
// Number of wCKs : 16
//==========================================================
//unsigned char flash wCK_IDs[16]={
//	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
//};
//unsigned char flash MotionZeroPos[16]={
//	/* ID
//	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
//	125,201,163, 67,108,125, 48, 89,184,142, 89, 39,124,162,211,127
//};
//----------------------------------------------------------
// Motion Name : HUNOBASIC_PUNCHLEFT
//----------------------------------------------------------
unsigned char flash HUNOBASIC_PUNCHLEFT_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 15, 15, 15, 15, 15, 15
};
unsigned char flash HUNOBASIC_PUNCHLEFT_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 20, 20, 20, 20, 20, 20
};
unsigned char flash HUNOBASIC_PUNCHLEFT_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash HUNOBASIC_PUNCHLEFT_Frames[5]={
	    1,    8,    1,    5,   15
};
unsigned int flash HUNOBASIC_PUNCHLEFT_TrTime[5]={
	   70,  310,  420,  200,  300
};
unsigned char flash HUNOBASIC_PUNCHLEFT_Position[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - Data_0
	{ 107,164,233,106, 95,108, 80, 29,155,129, 56, 62, 40,166,206,208 },	// Idx:1 - Scene_1
	{ 107,164,233,106, 95,145, 74, 40,163,154,117,124,114,166,206,208 },	// Idx:2 - Scene_2
	{ 126,164,222,100,107,125, 80, 29,155,142, 79, 44, 40,166,206,208 },	// Idx:3 - Scene_4
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:4 - Data_0
};
unsigned char flash HUNOBASIC_PUNCHLEFT_Torque[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Data_0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0 },	// Idx:1 - Scene_1
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:2 - Scene_2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - Scene_4
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:4 - Data_0
};
unsigned char flash HUNOBASIC_PUNCHLEFT_Port[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0 },	// Idx:0 - Data_0
	{   1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0 },	// Idx:1 - Scene_1
	{   3,  3,  3,  3,  3,  0,  0,  0,  0,  0,  3,  3,  3,  0,  0,  0 },	// Idx:2 - Scene_2
	{   3,  3,  3,  3,  3,  0,  0,  0,  0,  0,  3,  3,  3,  0,  0,  0 },	// Idx:3 - Scene_4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:4 - Data_0
};
//----------------------------------------------------------
// Motion Name : HUNOBASIC_PUNCHRIGHT
//----------------------------------------------------------
unsigned char flash HUNOBASIC_PUNCHRIGHT_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 15, 15, 15, 15, 15, 15
};
unsigned char flash HUNOBASIC_PUNCHRIGHT_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 20, 20, 20, 20, 20, 20
};
unsigned char flash HUNOBASIC_PUNCHRIGHT_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash HUNOBASIC_PUNCHRIGHT_Frames[5]={
	    1,    8,    1,    5,   15
};
unsigned int flash HUNOBASIC_PUNCHRIGHT_TrTime[5]={
	   70,  310,  420,  200,  300
};
unsigned char flash HUNOBASIC_PUNCHRIGHT_Position[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - Data_0
	{ 141,163,230,100,122,142, 87, 14,150,159, 79, 44, 40,187,194,208 },	// Idx:1 - Scene_1
	{ 105,164,224, 97,106,145, 80, 28,153,167, 79, 44, 40,119,127,131 },	// Idx:2 - Scene_2
	{ 126,164,222,100,107,125, 80, 29,155,142, 79, 44, 40,166,206,208 },	// Idx:3 - Scene_4
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:4 - Data_0
};
unsigned char flash HUNOBASIC_PUNCHRIGHT_Torque[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Data_0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0 },	// Idx:1 - Scene_1
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:2 - Scene_2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - Scene_4
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:4 - Data_0
};
unsigned char flash HUNOBASIC_PUNCHRIGHT_Port[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1 },	// Idx:0 - Data_0
	{   0,  0,  0,  0,  0,  2,  2,  2,  2,  2,  0,  0,  0,  2,  2,  2 },	// Idx:1 - Scene_1
	{   0,  0,  0,  0,  0,  3,  3,  3,  3,  2,  0,  0,  0,  3,  3,  3 },	// Idx:2 - Scene_2
	{   0,  0,  0,  0,  0,  3,  3,  3,  3,  3,  0,  0,  0,  3,  3,  3 },	// Idx:3 - Scene_4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:4 - Data_0
};
//----------------------------------------------------------
// Motion Name : HUNOBASIC_SIDEWALKLEFT
//----------------------------------------------------------
unsigned char flash HUNOBASIC_SIDEWALKLEFT_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 15, 15, 15, 15, 15, 15
};
unsigned char flash HUNOBASIC_SIDEWALKLEFT_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 20, 20, 20, 20, 20, 20
};
unsigned char flash HUNOBASIC_SIDEWALKLEFT_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash HUNOBASIC_SIDEWALKLEFT_Frames[6]={
	    1,    5,    8,    3,    1,   15
};
unsigned int flash HUNOBASIC_SIDEWALKLEFT_TrTime[6]={
	   70,  150,  310,  250,  120,  300
};
unsigned char flash HUNOBASIC_SIDEWALKLEFT_Position[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - Data_0
	{ 126,167,222, 98,110,125, 84, 29,155,142, 79, 44, 40,166,206,208 },	// Idx:1 - Data
	{ 107,164,233,102, 95,108, 80, 29,155,129, 56, 62, 40,166,206,208 },	// Idx:2 - Scene_1
	{ 107,164,233,105, 95,145, 74, 40,157,154, 56, 62, 40,166,206,208 },	// Idx:3 - Scene_2
	{ 126,164,222, 95,107,125, 84, 29,155,142, 79, 44, 40,166,206,208 },	// Idx:4 - Data
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:5 - Data
};
unsigned char flash HUNOBASIC_SIDEWALKLEFT_Torque[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Data_0
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:1 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_1
	{   2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  3,  3,  3,  3,  3,  3 },	// Idx:3 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  3 },	// Idx:4 - Data
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:5 - Data
};
unsigned char flash HUNOBASIC_SIDEWALKLEFT_Port[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data_0
	{   1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0 },	// Idx:1 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_1
	{   1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0 },	// Idx:3 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:5 - Data
};
//----------------------------------------------------------
// Motion Name : HUNOBASIC_SIDEWALKRIGHT
//----------------------------------------------------------
unsigned char flash HUNOBASIC_SIDEWALKRIGHT_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 15, 15, 15, 15, 15, 15
};
unsigned char flash HUNOBASIC_SIDEWALKRIGHT_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 20, 20, 20, 20, 20, 20
};
unsigned char flash HUNOBASIC_SIDEWALKRIGHT_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash HUNOBASIC_SIDEWALKRIGHT_Frames[6]={
	    1,    5,    8,    3,    1,   15
};
unsigned int flash HUNOBASIC_SIDEWALKRIGHT_TrTime[6]={
	   70,  150,  310,  200,  120,  300
};
unsigned char flash HUNOBASIC_SIDEWALKRIGHT_Position[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - Data_0
	{ 126,167,222, 98,110,125, 84, 29,155,142, 79, 44, 40,166,206,208 },	// Idx:1 - Data
	{ 139,163,230,100,120,142, 87, 14,150,159, 79, 44, 40,183,188,208 },	// Idx:2 - Scene_1
	{ 108,164,224, 97,106,151, 80, 28,153,167, 79, 44, 40,183,188,208 },	// Idx:3 - Scene_2
	{ 126,166,222, 98,113,125, 84, 29,155,142, 79, 44, 40,166,206,208 },	// Idx:4 - Data
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:5 - Scene_4
};
unsigned char flash HUNOBASIC_SIDEWALKRIGHT_Torque[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Data_0
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:1 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:2 - Scene_1
	{   0,  0,  0,  0,  0,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:3 - Scene_2
	{   0,  0,  0,  0,  0,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:4 - Data
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:5 - Scene_4
};
unsigned char flash HUNOBASIC_SIDEWALKRIGHT_Port[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data_0
	{   0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1 },	// Idx:1 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_1
	{   0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1 },	// Idx:3 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:5 - Scene_4
};
//----------------------------------------------------------
// Motion Name : HUNOBASIC_TURNLEFT
//----------------------------------------------------------
unsigned char flash HUNOBASIC_TURNLEFT_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 15, 15, 15, 15, 15, 15
};
unsigned char flash HUNOBASIC_TURNLEFT_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 20, 20, 20, 20, 20, 20
};
unsigned char flash HUNOBASIC_TURNLEFT_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash HUNOBASIC_TURNLEFT_Frames[6]={
	   10,    5,   10,    1,    5,   10
};
unsigned int flash HUNOBASIC_TURNLEFT_TrTime[6]={
	  200,  200,  400,  120,  200,  400
};
unsigned char flash HUNOBASIC_TURNLEFT_Position[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - Data_0
	{ 125,162,199, 72,108,126, 59, 49,151,141, 51, 47, 49,199,205,205 },	// Idx:1 - Data
	{ 136,169,210, 93,121,139, 36, 61,144,157, 51, 47, 49,199,205,205 },	// Idx:2 - Data_2
	{ 125,173,210, 93,123,139, 80, 14,137,157, 51, 47, 49,199,205,205 },	// Idx:3 - Data_3
	{ 134,173,210, 93,123,139, 80, 31,157,157, 51, 47, 49,199,205,205 },	// Idx:4 - Data_4
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:5 - Data_5
};
unsigned char flash HUNOBASIC_TURNLEFT_Torque[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Data_0
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  4,  4,  4,  4,  4,  4 },	// Idx:1 - Data
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  4,  4,  4,  4,  4,  4 },	// Idx:2 - Data_2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:3 - Data_3
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  4,  4,  4,  4,  4,  4 },	// Idx:4 - Data_4
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4 } 	// Idx:5 - Data_5
};
unsigned char flash HUNOBASIC_TURNLEFT_Port[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0 },	// Idx:0 - Data_0
	{   1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0 },	// Idx:1 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Data_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - Data_3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - Data_4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:5 - Data_5
};
//----------------------------------------------------------
// Motion Name : HUNOBASIC_TURNRIGHT
//----------------------------------------------------------
unsigned char flash HUNOBASIC_TURNRIGHT_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 15, 15, 20, 15, 15, 15
};
unsigned char flash HUNOBASIC_TURNRIGHT_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 20, 20, 30, 20, 20, 20
};
unsigned char flash HUNOBASIC_TURNRIGHT_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash HUNOBASIC_TURNRIGHT_Frames[6]={
	   10,    5,   10,    1,    5,   10
};
unsigned int flash HUNOBASIC_TURNRIGHT_TrTime[6]={
	  200,  200,  400,  120,  200,  400
};
unsigned char flash HUNOBASIC_TURNRIGHT_Position[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - Data_0
	{ 125,193,205,107,108,126, 89, 49,180,141, 51, 47, 49,199,205,205 },	// Idx:1 - Data
	{ 119,209,195,106, 96,119, 81, 31,157,132, 51, 47, 49,199,205,205 },	// Idx:2 - Data_2
	{ 117,162,227, 98,103,125, 78, 49,163,127, 51, 47, 49,199,205,205 },	// Idx:3 - Data_3
	{ 110,168,204, 85, 92,117, 81, 49,163,128, 51, 47, 49,199,205,205 },	// Idx:4 - Data_4
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:5 - Data_5
};
unsigned char flash HUNOBASIC_TURNRIGHT_Torque[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Data_0
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  4,  4,  4,  4,  4,  4 },	// Idx:1 - Data
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  4,  4,  4,  4,  4,  4 },	// Idx:2 - Data_2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:3 - Data_3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:4 - Data_4
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 } 	// Idx:5 - Data_5
};
unsigned char flash HUNOBASIC_TURNRIGHT_Port[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1 },	// Idx:0 - Data_0
	{   0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  0 },	// Idx:1 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Data_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - Data_3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - Data_4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:5 - Data_5
};
//----------------------------------------------------------
// Motion Name : HUNOBASIC_GETUPBACK
//----------------------------------------------------------
unsigned char flash HUNOBASIC_GETUPBACK_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 15, 15, 15, 15, 15, 15
};
unsigned char flash HUNOBASIC_GETUPBACK_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 20, 20, 20, 20, 20, 20
};
unsigned char flash HUNOBASIC_GETUPBACK_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash HUNOBASIC_GETUPBACK_Frames[10]={
	   15,   30,   45,   45,   45,   30,   30,   30,   30,   30
};
unsigned int flash HUNOBASIC_GETUPBACK_TrTime[10]={
	  300,  600,  900,  900,  900,  600,  600,  600,  600,  600
};
unsigned char flash HUNOBASIC_GETUPBACK_Position[11][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - Data_0
	{ 124,220,247,125,108,126, 29,  4,127,140, 51, 47, 49,199,205,205 },	// Idx:1 - Data
	{ 123,220,246, 86,112,126, 29,  7,169,139,  1, 59, 74,253,191,181 },	// Idx:2 - Data
	{ 130, 83,144, 63,108,125,170,103,191,139,  1, 59,163,253,191, 88 },	// Idx:3 - Data
	{ 130, 83,144, 63,108,125,170,103,191,139,234,125, 90,  5,129,166 },	// Idx:4 - Data
	{ 129, 94,183,100,110,128,162,110,186,136,160, 45, 81, 90,205,167 },	// Idx:5 - Data_21
	{ 129, 87,191, 60,110,128,162, 59,193,136,138, 46, 89,116,203,167 },	// Idx:6 - Data_22
	{ 129,129,190, 65,110,128,120, 59,187,140,133, 45, 81,116,203,167 },	// Idx:7 - Data_23
	{ 129,161,197, 71,110,128, 89, 53,181,143,143, 36, 89,116,203,167 },	// Idx:8 - Data_24
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:9 - Data_25
};
unsigned char flash HUNOBASIC_GETUPBACK_Torque[10][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Data_0
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:1 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:2 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  4,  4,  4,  4 },	// Idx:3 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:4 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:5 - Data_21
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:6 - Data_22
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:7 - Data_23
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:8 - Data_24
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4 } 	// Idx:9 - Data_25
};
unsigned char flash HUNOBASIC_GETUPBACK_Port[10][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data_0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - Data
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:5 - Data_21
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - Data_22
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:7 - Data_23
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:8 - Data_24
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:9 - Data_25
};
//----------------------------------------------------------
// Motion Name : HUNOBASIC_GETUPFRONT
//----------------------------------------------------------
unsigned char flash HUNOBASIC_GETUPFRONT_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 15, 15, 15, 15, 15, 15
};
unsigned char flash HUNOBASIC_GETUPFRONT_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 20, 20, 20, 20, 20, 20
};
unsigned char flash HUNOBASIC_GETUPFRONT_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash HUNOBASIC_GETUPFRONT_Frames[9]={
	   10,   10,   10,   10,    1,   35,   30,   40,   30
};
unsigned int flash HUNOBASIC_GETUPFRONT_TrTime[9]={
	  300,  500,  500,  700,  820,  700,  600,  800,  600
};
unsigned char flash HUNOBASIC_GETUPFRONT_Position[10][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - Data_0
	{ 125, 82,214, 89,108,126, 72, 49,163,141,143, 47, 49,114,205,205 },	// Idx:1 - Data_1
	{ 125, 82,218,101,114,125,166, 34,151,143,141, 47, 49,114,205,205 },	// Idx:2 - Data_2
	{ 125,210,228, 80,113,124, 35, 25,172,142,167, 47, 47, 82,205,204 },	// Idx:3 - Data_3
	{ 125,218,247, 86,113,123, 31,  5,168,141,  9, 87,146,254,162,108 },	// Idx:4 - Data_4
	{ 125,220,244,122,109,123, 29,  5,128,141, 33, 42,146,222,210,108 },	// Idx:5 - Data_5
	{ 125,220,222,122,113,123, 29, 28,135,141, 98, 50, 78,146,197,169 },	// Idx:6 - Data
	{ 125,160,242,114,113,123, 87,  8,135,141, 82, 47, 69,173,205,191 },	// Idx:7 - Data_6
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:8 - Data_7
};
unsigned char flash HUNOBASIC_GETUPFRONT_Torque[9][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Data_0
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  4,  4,  4,  4,  4,  4 },	// Idx:1 - Data_1
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:2 - Data_2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:3 - Data_3
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:4 - Data_4
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:5 - Data_5
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:6 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:7 - Data_6
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:8 - Data_7
};
unsigned char flash HUNOBASIC_GETUPFRONT_Port[9][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data_0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - Data_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Data_2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - Data_3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - Data_4
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:5 - Data_5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:7 - Data_6
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:8 - Data_7
};
//----------------------------------------------------------
// Motion Name : HUNOBASIC_WALKFORWARD
//----------------------------------------------------------
unsigned char flash HUNOBASIC_WALKFORWARD_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 15, 15, 15, 15, 15, 15
};
unsigned char flash HUNOBASIC_WALKFORWARD_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 20, 20, 20, 20, 20, 20
};
unsigned char flash HUNOBASIC_WALKFORWARD_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash HUNOBASIC_WALKFORWARD_Frames[40]={
	    5,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,   10,   15
};
unsigned int flash HUNOBASIC_WALKFORWARD_TrTime[40]={
	  200,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
	   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
	   25,   25,   25,   25,   25,   25,   25,  200,  300
};
unsigned char flash HUNOBASIC_WALKFORWARD_Position[41][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - 0
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:1 - 0
	{ 130,165,201, 81,115,134, 81, 31,147,149, 72, 44, 40,145,209,201 },	// Idx:2 - 1
	{ 132,171,197, 83,117,137, 86, 28,148,152, 78, 43, 41,154,209,206 },	// Idx:3 - 2
	{ 132,175,195, 87,117,139, 91, 27,152,154, 87, 43, 43,164,209,211 },	// Idx:4 - 3
	{ 132,178,197, 91,117,137, 95, 28,157,152, 97, 43, 48,172,209,213 },	// Idx:5 - 4
	{ 130,179,201, 95,115,134, 96, 31,161,149,105, 43, 53,179,210,214 },	// Idx:6 - 5
	{ 127,178,206, 98,112,130, 95, 35,166,145,111, 42, 57,182,210,214 },	// Idx:7 - 6
	{ 124,175,212,100,109,127, 92, 40,170,142,113, 42, 59,183,210,214 },	// Idx:8 - 7
	{ 124,175,212,100,109,127, 92, 40,170,142,113, 42, 59,183,210,214 },	// Idx:9 - 8
	{ 120,172,217,102,105,123, 88, 46,170,138,111, 42, 57,182,210,214 },	// Idx:10 - 9
	{ 116,167,221,103,101,120, 83, 51,169,135,106, 43, 53,179,210,214 },	// Idx:11 - 10
	{ 113,162,224,102, 98,118, 77, 55,167,133, 97, 43, 48,173,209,213 },	// Idx:12 - 11
	{ 111,157,225, 98, 96,118, 73, 57,163,133, 87, 43, 43,164,209,211 },	// Idx:13 - 12
	{ 113,153,224, 93, 98,118, 70, 55,159,133, 79, 43, 41,154,209,206 },	// Idx:14 - 13
	{ 116,152,221, 89,101,120, 69, 51,155,135, 72, 44, 40,146,209,201 },	// Idx:15 - 14
	{ 120,153,217, 84,105,123, 70, 46,152,138, 69, 44, 40,140,208,197 },	// Idx:16 - 15
	{ 123,156,212, 80,108,126, 73, 40,150,141, 68, 44, 40,138,208,195 },	// Idx:17 - 16
	{ 123,156,212, 80,108,126, 73, 40,150,141, 68, 44, 40,138,208,195 },	// Idx:18 - 17
	{ 130,165,201, 81,115,134, 81, 31,147,149, 72, 44, 40,145,209,201 },	// Idx:19 - 1
	{ 132,171,197, 83,117,137, 86, 28,148,152, 78, 43, 41,154,209,206 },	// Idx:20 - 2
	{ 132,175,195, 87,117,139, 91, 27,152,154, 87, 43, 43,164,209,211 },	// Idx:21 - 3
	{ 132,178,197, 91,117,137, 95, 28,157,152, 97, 43, 48,172,209,213 },	// Idx:22 - 4
	{ 130,179,201, 95,115,134, 96, 31,161,149,105, 43, 53,179,210,214 },	// Idx:23 - 5
	{ 127,178,206, 98,112,130, 95, 35,166,145,111, 42, 57,182,210,214 },	// Idx:24 - 6
	{ 124,175,212,100,109,127, 92, 40,170,142,113, 42, 59,183,210,214 },	// Idx:25 - 7
	{ 124,175,212,100,109,127, 92, 40,170,142,113, 42, 59,183,210,214 },	// Idx:26 - 8
	{ 120,172,217,102,105,123, 88, 46,170,138,111, 42, 57,182,210,214 },	// Idx:27 - 9
	{ 116,167,221,103,101,120, 83, 51,169,135,106, 43, 53,179,210,214 },	// Idx:28 - 10
	{ 113,162,224,102, 98,118, 77, 55,167,133, 97, 43, 48,173,209,213 },	// Idx:29 - 11
	{ 111,157,225, 98, 96,118, 73, 57,163,133, 87, 43, 43,164,209,211 },	// Idx:30 - 12
	{ 113,153,224, 93, 98,118, 70, 55,159,133, 79, 43, 41,154,209,206 },	// Idx:31 - 13
	{ 116,152,221, 89,101,120, 69, 51,155,135, 72, 44, 40,146,209,201 },	// Idx:32 - 14
	{ 120,153,217, 84,105,123, 70, 46,152,138, 69, 44, 40,140,208,197 },	// Idx:33 - 15
	{ 123,156,212, 80,108,126, 73, 40,150,141, 68, 44, 40,138,208,195 },	// Idx:34 - 16
	{ 123,156,212, 80,108,126, 73, 40,150,141, 68, 44, 40,138,208,195 },	// Idx:35 - 17
	{ 130,165,201, 81,115,134, 81, 31,147,149, 72, 44, 40,145,209,201 },	// Idx:36 - 1
	{ 132,171,197, 83,117,137, 86, 28,148,152, 78, 43, 41,154,209,206 },	// Idx:37 - 2
	{ 125,166,229,106,108,126, 86, 23,150,141, 51, 47, 49,199,205,205 },	// Idx:38 - 3
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:39 - Data
};
unsigned char flash HUNOBASIC_WALKFORWARD_Torque[40][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:0 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:2 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:4 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:5 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 5
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:7 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:8 - 7
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:9 - 8
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:10 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:11 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:12 - 11
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:13 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:14 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:15 - 14
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:16 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:17 - 16
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:18 - 17
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:19 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:20 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:21 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:22 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:23 - 5
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:24 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:25 - 7
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:26 - 8
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:27 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:28 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:29 - 11
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:30 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:31 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:32 - 14
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:33 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:34 - 16
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:35 - 17
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:36 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:37 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:38 - 3
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:39 - Data
};
unsigned char flash HUNOBASIC_WALKFORWARD_Port[40][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:2 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:4 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:5 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 5
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:7 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:8 - 7
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:9 - 8
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:10 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:11 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:12 - 11
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:13 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:14 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:15 - 14
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:16 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:17 - 16
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:18 - 17
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:19 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:20 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:21 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:22 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:23 - 5
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:24 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:25 - 7
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:26 - 8
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:27 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:28 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:29 - 11
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:30 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:31 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:32 - 14
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:33 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:34 - 16
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:35 - 17
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:36 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:37 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:38 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:39 - Data
};
//----------------------------------------------------------
// Motion Name : HUNOBASIC_WALKBACKWARD
//----------------------------------------------------------
unsigned char flash HUNOBASIC_WALKBACKWARD_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 15, 15, 15, 15, 15, 15
};
unsigned char flash HUNOBASIC_WALKBACKWARD_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 20, 20, 20, 20, 20, 20
};
unsigned char flash HUNOBASIC_WALKBACKWARD_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash HUNOBASIC_WALKBACKWARD_Frames[42]={
	    5,   20,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,    1,   10,   20
};
unsigned int flash HUNOBASIC_WALKBACKWARD_TrTime[42]={
	  300,  400,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
	   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
	   25,   25,   25,   25,   25,   25,   25,   25,   25,  400,  400
};
unsigned char flash HUNOBASIC_WALKBACKWARD_Position[43][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - Data
	{ 125,160,220,107,108,126, 88, 31,146,141, 51, 47, 49,199,205,205 },	// Idx:1 - Data
	{ 120,153,218, 88,105,123, 72, 46,151,138, 57, 43, 51,174,210,214 },	// Idx:2 - Data
	{ 116,151,223, 91,101,120, 70, 52,155,135, 58, 43, 48,177,210,214 },	// Idx:3 - 1
	{ 112,152,226, 94, 97,119, 70, 57,160,134, 59, 43, 45,182,210,214 },	// Idx:4 - 2
	{ 111,155,227, 99, 96,118, 72, 60,165,133, 63, 43, 41,188,209,213 },	// Idx:5 - 3
	{ 112,160,226,102, 97,118, 76, 58,167,133, 68, 44, 40,191,209,209 },	// Idx:6 - 4
	{ 115,165,223,104,100,120, 82, 52,168,135, 73, 44, 40,193,209,206 },	// Idx:7 - 5
	{ 120,169,218,104,105,123, 88, 46,167,138, 77, 44, 40,194,209,203 },	// Idx:8 - 6
	{ 123,173,212,103,108,126, 92, 40,165,141, 78, 43, 40,194,209,202 },	// Idx:9 - 7
	{ 123,173,212,103,108,126, 92, 40,165,141, 78, 43, 40,194,209,202 },	// Idx:10 - 8
	{ 127,176,206, 99,112,130, 95, 34,162,145, 77, 44, 40,194,209,203 },	// Idx:11 - 9
	{ 130,178,200, 95,115,134, 97, 29,159,149, 74, 44, 40,193,209,206 },	// Idx:12 - 10
	{ 131,178,195, 90,116,138, 96, 26,156,153, 69, 44, 40,192,209,209 },	// Idx:13 - 11
	{ 132,176,192, 85,117,139, 93, 25,151,154, 63, 43, 41,188,209,213 },	// Idx:14 - 12
	{ 132,172,194, 83,117,138, 88, 26,148,153, 60, 43, 45,183,210,214 },	// Idx:15 - 13
	{ 130,166,200, 82,115,135, 83, 29,146,150, 58, 43, 48,178,210,214 },	// Idx:16 - 14
	{ 127,160,206, 83,112,130, 79, 34,146,145, 57, 43, 51,174,210,214 },	// Idx:17 - 15
	{ 124,156,212, 85,109,127, 75, 40,147,142, 57, 43, 52,173,209,214 },	// Idx:18 - 16
	{ 124,156,212, 85,109,127, 75, 40,147,142, 57, 43, 52,173,209,214 },	// Idx:19 - 17
	{ 116,151,223, 91,101,120, 70, 52,155,135, 58, 43, 48,177,210,214 },	// Idx:20 - 1
	{ 112,152,226, 94, 97,119, 70, 57,160,134, 59, 43, 45,182,210,214 },	// Idx:21 - 2
	{ 111,155,227, 99, 96,118, 72, 60,165,133, 63, 43, 41,188,209,213 },	// Idx:22 - 3
	{ 112,160,226,102, 97,118, 76, 58,167,133, 68, 44, 40,191,209,209 },	// Idx:23 - 4
	{ 115,165,223,104,100,120, 82, 52,168,135, 73, 44, 40,193,209,206 },	// Idx:24 - 5
	{ 120,169,218,104,105,123, 88, 46,167,138, 77, 44, 40,194,209,203 },	// Idx:25 - 6
	{ 123,173,212,103,108,126, 92, 40,165,141, 78, 43, 40,194,209,202 },	// Idx:26 - 7
	{ 123,173,212,103,108,126, 92, 40,165,141, 78, 43, 40,194,209,202 },	// Idx:27 - 8
	{ 127,176,206, 99,112,130, 95, 34,162,145, 77, 44, 40,194,209,203 },	// Idx:28 - 9
	{ 130,178,200, 95,115,134, 97, 29,159,149, 74, 44, 40,193,209,206 },	// Idx:29 - 10
	{ 131,178,195, 90,116,138, 96, 26,156,153, 69, 44, 40,192,209,209 },	// Idx:30 - 11
	{ 132,176,192, 85,117,139, 93, 25,151,154, 63, 43, 41,188,209,213 },	// Idx:31 - 12
	{ 132,172,194, 83,117,138, 88, 26,148,153, 60, 43, 45,183,210,214 },	// Idx:32 - 13
	{ 130,166,200, 82,115,135, 83, 29,146,150, 58, 43, 48,178,210,214 },	// Idx:33 - 14
	{ 127,160,206, 83,112,130, 79, 34,146,145, 57, 43, 51,174,210,214 },	// Idx:34 - 15
	{ 124,156,212, 85,109,127, 75, 40,147,142, 57, 43, 52,173,209,214 },	// Idx:35 - 16
	{ 124,156,212, 85,109,127, 75, 40,147,142, 57, 43, 52,173,209,214 },	// Idx:36 - 17
	{ 116,151,223, 91,101,120, 70, 52,155,135, 58, 43, 48,177,210,214 },	// Idx:37 - 1
	{ 112,152,226, 94, 97,119, 70, 57,160,134, 59, 43, 45,182,210,214 },	// Idx:38 - 2
	{ 111,155,227, 99, 96,118, 72, 60,165,133, 63, 43, 41,188,209,213 },	// Idx:39 - 3
	{ 111,155,227, 98, 96,118, 89, 25,155,133, 63, 43, 41,188,209,213 },	// Idx:40 - Scene_40
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:41 - Scene_41
};
unsigned char flash HUNOBASIC_WALKBACKWARD_Torque[42][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:3 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:5 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 5
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:8 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:9 - 7
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:10 - 8
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:11 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:12 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:13 - 11
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:14 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:15 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:16 - 14
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:17 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:18 - 16
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:19 - 17
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:20 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:21 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:22 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:23 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:24 - 5
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:25 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:26 - 7
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:27 - 8
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:28 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:29 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:30 - 11
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:31 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:32 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:33 - 14
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:34 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:35 - 16
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:36 - 17
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:37 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:38 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:39 - 3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:40 - Scene_40
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:41 - Scene_41
};
unsigned char flash HUNOBASIC_WALKBACKWARD_Port[42][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:3 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:5 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 5
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:8 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:9 - 7
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:10 - 8
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:11 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:12 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:13 - 11
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:14 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:15 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:16 - 14
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:17 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:18 - 16
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:19 - 17
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:20 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:21 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:22 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:23 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:24 - 5
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:25 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:26 - 7
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:27 - 8
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:28 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:29 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:30 - 11
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:31 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:32 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:33 - 14
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:34 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:35 - 16
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:36 - 17
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:37 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:38 - 2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:39 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:40 - Scene_40
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:41 - Scene_41
};
//==========================================================
// Project : [ DinoBasic ]
// Motion Builder Version : ver 1.1
// Date,Time : 2008-02-22 오후 3:32:36
// Format : ME_FMT#1
// Number of Motions : 10
// Number of wCKs : 16
//==========================================================
//unsigned char flash wCK_IDs[16]={
//	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
//};
//unsigned char flash MotionZeroPos[16]={
//	/* ID
//	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
//	125,201,163, 67,108,125, 48, 89,184,142, 89, 39,124,162,211,127
//};
//----------------------------------------------------------
// Motion Name : DinoBasic_WalkForward
//----------------------------------------------------------
unsigned char flash DinoBasic_WalkForward_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40
};
unsigned char flash DinoBasic_WalkForward_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60
};
unsigned char flash DinoBasic_WalkForward_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DinoBasic_WalkForward_Frames[42]={
	   30,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,   25
};
unsigned int flash DinoBasic_WalkForward_TrTime[42]={
	 1000,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,  500
};
unsigned char flash DinoBasic_WalkForward_Position[43][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:0 - Data
	{ 124,141,223, 86,107,125, 90, 27,145,139, 89,127, 47,159,112,171 },	// Idx:1 - 0
	{ 129,146,216, 86,112,131, 95, 20,143,145, 89,127, 47,159,112,171 },	// Idx:2 - 1
	{ 131,150,213, 87,114,134, 99, 18,144,148, 89,127, 47,159,112,171 },	// Idx:3 - 2
	{ 132,154,212, 89,115,136,103, 16,146,150, 89,127, 47,159,112,171 },	// Idx:4 - 3
	{ 132,157,211, 92,115,136,107, 15,149,150, 89,127, 47,159,112,171 },	// Idx:5 - 4
	{ 132,160,212, 95,115,136,110, 16,152,150, 89,127, 47,159,112,171 },	// Idx:6 - 5
	{ 131,161,213, 98,114,134,111, 18,156,148, 89,127, 47,159,112,171 },	// Idx:7 - 6
	{ 129,161,216,101,112,131,111, 20,159,145, 89,127, 47,159,112,171 },	// Idx:8 - 7
	{ 127,161,219,103,110,128,110, 24,162,142, 89,127, 47,159,112,171 },	// Idx:9 - 8
	{ 125,159,223,105,108,126,108, 27,164,140, 89,127, 47,159,112,171 },	// Idx:10 - 9
	{ 122,157,226,106,105,123,106, 31,164,137, 89,127, 47,159,112,171 },	// Idx:11 - 10
	{ 119,154,230,107,102,121,103, 34,164,135, 89,127, 47,159,112,171 },	// Idx:12 - 11
	{ 116,150,232,106, 99,119, 99, 37,163,133, 89,127, 47,159,112,171 },	// Idx:13 - 12
	{ 114,146,234,104, 97,118, 95, 38,161,132, 89,127, 47,159,112,171 },	// Idx:14 - 13
	{ 114,142,235,101, 97,118, 92, 39,158,132, 89,127, 47,159,112,171 },	// Idx:15 - 14
	{ 114,139,234, 98, 97,118, 89, 38,155,132, 89,127, 47,159,112,171 },	// Idx:16 - 15
	{ 116,138,232, 94, 99,119, 88, 37,152,133, 89,127, 47,159,112,171 },	// Idx:17 - 16
	{ 119,138,230, 91,102,121, 88, 34,149,135, 89,127, 47,159,112,171 },	// Idx:18 - 17
	{ 122,139,226, 88,105,123, 88, 31,147,137, 89,127, 47,159,112,171 },	// Idx:19 - 18
	{ 122,139,226, 88,105,123, 88, 31,147,137, 89,127, 47,159,112,171 },	// Idx:20 - 19
	{ 124,141,223, 86,107,125, 90, 27,145,139, 89,127, 47,159,112,171 },	// Idx:21 - 0
	{ 129,146,216, 86,112,131, 95, 20,143,145, 89,127, 47,159,112,171 },	// Idx:22 - 1
	{ 131,150,213, 87,114,134, 99, 18,144,148, 89,127, 47,159,112,171 },	// Idx:23 - 2
	{ 132,154,212, 89,115,136,103, 16,146,150, 89,127, 47,159,112,171 },	// Idx:24 - 3
	{ 132,157,211, 92,115,136,107, 15,149,150, 89,127, 47,159,112,171 },	// Idx:25 - 4
	{ 132,160,212, 95,115,136,110, 16,152,150, 89,127, 47,159,112,171 },	// Idx:26 - 5
	{ 131,161,213, 98,114,134,111, 18,156,148, 89,127, 47,159,112,171 },	// Idx:27 - 6
	{ 129,161,216,101,112,131,111, 20,159,145, 89,127, 47,159,112,171 },	// Idx:28 - 7
	{ 127,161,219,103,110,128,110, 24,162,142, 89,127, 47,159,112,171 },	// Idx:29 - 8
	{ 125,159,223,105,108,126,108, 27,164,140, 89,127, 47,159,112,171 },	// Idx:30 - 9
	{ 122,157,226,106,105,123,106, 31,164,137, 89,127, 47,159,112,171 },	// Idx:31 - 10
	{ 119,154,230,107,102,121,103, 34,164,135, 89,127, 47,159,112,171 },	// Idx:32 - 11
	{ 116,150,232,106, 99,119, 99, 37,163,133, 89,127, 47,159,112,171 },	// Idx:33 - 12
	{ 114,146,234,104, 97,118, 95, 38,161,132, 89,127, 47,159,112,171 },	// Idx:34 - 13
	{ 114,142,235,101, 97,118, 92, 39,158,132, 89,127, 47,159,112,171 },	// Idx:35 - 14
	{ 114,139,234, 98, 97,118, 89, 38,155,132, 89,127, 47,159,112,171 },	// Idx:36 - 15
	{ 116,138,232, 94, 99,119, 88, 37,152,133, 89,127, 47,159,112,171 },	// Idx:37 - 16
	{ 119,138,230, 91,102,121, 88, 34,149,135, 89,127, 47,159,112,171 },	// Idx:38 - 17
	{ 122,139,226, 88,105,123, 88, 31,147,137, 89,127, 47,159,112,171 },	// Idx:39 - 18
	{ 122,139,226, 88,105,123, 88, 31,147,137, 89,127, 47,159,112,171 },	// Idx:40 - 19
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 } 	// Idx:41 - Data
};
unsigned char flash DinoBasic_WalkForward_Torque[42][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:2 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 3
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:5 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 6
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:8 - 7
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:9 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:10 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:11 - 10
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:12 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:13 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:14 - 13
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:15 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:16 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:17 - 16
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:18 - 17
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:19 - 18
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:20 - 19
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:21 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:22 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:23 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:24 - 3
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:25 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:26 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:27 - 6
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:28 - 7
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:29 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:30 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:31 - 10
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:32 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:33 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:34 - 13
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:35 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:36 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:37 - 16
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:38 - 17
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:39 - 18
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:40 - 19
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 } 	// Idx:41 - Data
};
unsigned char flash DinoBasic_WalkForward_Port[42][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:2 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 3
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:5 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 6
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:8 - 7
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:9 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:10 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:11 - 10
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:12 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:13 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:14 - 13
	{   1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:15 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:16 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:17 - 16
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:18 - 17
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:19 - 18
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:20 - 19
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:21 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:22 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:23 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:24 - 3
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:25 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:26 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:27 - 6
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:28 - 7
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:29 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:30 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:31 - 10
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:32 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:33 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:34 - 13
	{   1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:35 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:36 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:37 - 16
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:38 - 17
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:39 - 18
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:40 - 19
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:41 - Data
};
//----------------------------------------------------------
// Motion Name : DinoBasic_WalkBackward
//----------------------------------------------------------
unsigned char flash DinoBasic_WalkBackward_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40
};
unsigned char flash DinoBasic_WalkBackward_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60
};
unsigned char flash DinoBasic_WalkBackward_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DinoBasic_WalkBackward_Frames[42]={
	   30,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,   10
};
unsigned int flash DinoBasic_WalkBackward_TrTime[42]={
	 1000,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,  500
};
unsigned char flash DinoBasic_WalkBackward_Position[43][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:0 - Data
	{ 125,141,223, 90,108,126, 90, 27,141,140, 89,127, 47,159,112,171 },	// Idx:1 - 0
	{ 119,138,230, 94,102,121, 88, 34,146,135, 89,127, 47,159,112,171 },	// Idx:2 - 1
	{ 116,138,232, 97, 99,119, 88, 37,149,133, 89,127, 47,159,112,171 },	// Idx:3 - 2
	{ 114,139,234,100, 97,118, 89, 38,152,132, 89,127, 47,159,112,171 },	// Idx:4 - 3
	{ 114,142,235,103, 97,118, 92, 39,156,132, 89,127, 47,159,112,171 },	// Idx:5 - 4
	{ 114,146,234,107, 97,118, 95, 38,158,132, 89,127, 47,159,112,171 },	// Idx:6 - 5
	{ 116,150,232,109, 99,119, 99, 37,160,133, 89,127, 47,159,112,171 },	// Idx:7 - 6
	{ 119,154,230,110,102,121,103, 34,161,135, 89,127, 47,159,112,171 },	// Idx:8 - 7
	{ 122,157,226,110,105,123,106, 31,161,137, 89,127, 47,159,112,171 },	// Idx:9 - 8
	{ 124,159,223,109,107,125,108, 27,160,139, 89,127, 47,159,112,171 },	// Idx:10 - 9
	{ 127,161,219,107,110,128,110, 24,158,142, 89,127, 47,159,112,171 },	// Idx:11 - 10
	{ 129,161,216,104,112,131,111, 20,156,145, 89,127, 47,159,112,171 },	// Idx:12 - 11
	{ 131,161,213,101,114,134,111, 18,153,148, 89,127, 47,159,112,171 },	// Idx:13 - 12
	{ 132,160,212, 98,115,136,110, 16,150,150, 89,127, 47,159,112,171 },	// Idx:14 - 13
	{ 132,157,211, 94,115,136,107, 15,147,150, 89,127, 47,159,112,171 },	// Idx:15 - 14
	{ 132,154,212, 92,115,136,103, 16,143,150, 89,127, 47,159,112,171 },	// Idx:16 - 15
	{ 131,150,213, 90,114,134, 99, 18,141,148, 89,127, 47,159,112,171 },	// Idx:17 - 16
	{ 129,146,216, 89,112,131, 95, 20,140,145, 89,127, 47,159,112,171 },	// Idx:18 - 17
	{ 127,143,219, 89,110,128, 92, 24,140,142, 89,127, 47,159,112,171 },	// Idx:19 - 18
	{ 127,143,219, 89,110,128, 92, 24,140,142, 89,127, 47,159,112,171 },	// Idx:20 - 19
	{ 125,141,223, 90,108,126, 90, 27,141,140, 89,127, 47,159,112,171 },	// Idx:21 - 0
	{ 119,138,230, 94,102,121, 88, 34,146,135, 89,127, 47,159,112,171 },	// Idx:22 - 1
	{ 116,138,232, 97, 99,119, 88, 37,149,133, 89,127, 47,159,112,171 },	// Idx:23 - 2
	{ 114,139,234,100, 97,118, 89, 38,152,132, 89,127, 47,159,112,171 },	// Idx:24 - 3
	{ 114,142,235,103, 97,118, 92, 39,156,132, 89,127, 47,159,112,171 },	// Idx:25 - 4
	{ 114,146,234,107, 97,118, 95, 38,158,132, 89,127, 47,159,112,171 },	// Idx:26 - 5
	{ 116,150,232,109, 99,119, 99, 37,160,133, 89,127, 47,159,112,171 },	// Idx:27 - 6
	{ 119,154,230,110,102,121,103, 34,161,135, 89,127, 47,159,112,171 },	// Idx:28 - 7
	{ 122,157,226,110,105,123,106, 31,161,137, 89,127, 47,159,112,171 },	// Idx:29 - 8
	{ 124,159,223,109,107,125,108, 27,160,139, 89,127, 47,159,112,171 },	// Idx:30 - 9
	{ 127,161,219,107,110,128,110, 24,158,142, 89,127, 47,159,112,171 },	// Idx:31 - 10
	{ 129,161,216,104,112,131,111, 20,156,145, 89,127, 47,159,112,171 },	// Idx:32 - 11
	{ 131,161,213,101,114,134,111, 18,153,148, 89,127, 47,159,112,171 },	// Idx:33 - 12
	{ 132,160,212, 98,115,136,110, 16,150,150, 89,127, 47,159,112,171 },	// Idx:34 - 13
	{ 132,157,211, 94,115,136,107, 15,147,150, 89,127, 47,159,112,171 },	// Idx:35 - 14
	{ 132,154,212, 92,115,136,103, 16,143,150, 89,127, 47,159,112,171 },	// Idx:36 - 15
	{ 131,150,213, 90,114,134, 99, 18,141,148, 89,127, 47,159,112,171 },	// Idx:37 - 16
	{ 129,146,216, 89,112,131, 95, 20,140,145, 89,127, 47,159,112,171 },	// Idx:38 - 17
	{ 127,143,219, 89,110,128, 92, 24,140,142, 89,127, 47,159,112,171 },	// Idx:39 - 18
	{ 127,143,219, 89,110,128, 92, 24,140,142, 89,127, 47,159,112,171 },	// Idx:40 - 19
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 } 	// Idx:41 - Data
};
unsigned char flash DinoBasic_WalkBackward_Torque[42][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:2 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 3
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:5 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 6
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:8 - 7
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:9 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:10 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:11 - 10
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:12 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:13 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:14 - 13
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:15 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:16 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:17 - 16
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:18 - 17
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:19 - 18
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:20 - 19
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:21 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:22 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:23 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:24 - 3
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:25 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:26 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:27 - 6
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:28 - 7
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:29 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:30 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:31 - 10
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:32 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:33 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:34 - 13
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:35 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:36 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:37 - 16
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:38 - 17
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:39 - 18
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:40 - 19
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 } 	// Idx:41 - Data
};
unsigned char flash DinoBasic_WalkBackward_Port[42][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:2 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 3
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:5 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 6
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:8 - 7
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:9 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:10 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:11 - 10
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:12 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:13 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:14 - 13
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:15 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:16 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:17 - 16
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:18 - 17
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:19 - 18
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:20 - 19
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:21 - 0
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:22 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:23 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:24 - 3
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:25 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:26 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:27 - 6
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:28 - 7
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:29 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:30 - 9
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:31 - 10
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:32 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:33 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:34 - 13
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:35 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:36 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:37 - 16
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:38 - 17
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 },	// Idx:39 - 18
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:40 - 19
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:41 - Data
};
//----------------------------------------------------------
// Motion Name : DinoBasic_SidewalkLeft
//----------------------------------------------------------
unsigned char flash DinoBasic_SidewalkLeft_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 20, 20, 20, 20, 20, 20
};
unsigned char flash DinoBasic_SidewalkLeft_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 30, 30, 30, 30, 30, 30
};
unsigned char flash DinoBasic_SidewalkLeft_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DinoBasic_SidewalkLeft_Frames[6]={
	   30,    5,    8,    3,    1,   15
};
unsigned int flash DinoBasic_SidewalkLeft_TrTime[6]={
	 1000,  150,  310,  250,  120,  300
};
unsigned char flash DinoBasic_SidewalkLeft_Position[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:0 - Data
	{ 126,167,222, 98,110,125, 84, 29,155,142, 89,127, 47,159,112,171 },	// Idx:1 - Data
	{ 107,164,233,102, 95,108, 80, 29,155,129, 89,127, 47,159,112,171 },	// Idx:2 - Scene_1
	{ 107,164,233,105, 95,145, 74, 40,157,154, 89,127, 47,159,112,171 },	// Idx:3 - Scene_2
	{ 126,164,222, 95,107,125, 84, 29,155,142, 89,127, 47,159,112,171 },	// Idx:4 - Data
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 } 	// Idx:5 - Data
};
unsigned char flash DinoBasic_SidewalkLeft_Torque[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Data
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:1 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_1
	{   2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  3,  3,  3,  3,  3,  3 },	// Idx:3 - Scene_2
	{   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  3,  3,  3,  3,  3,  3 },	// Idx:4 - Data
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:5 - Data
};
unsigned char flash DinoBasic_SidewalkLeft_Port[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0 },	// Idx:0 - Data
	{   1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0 },	// Idx:1 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_1
	{   1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0 },	// Idx:3 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:5 - Data
};
//----------------------------------------------------------
// Motion Name : DinoBasic_SidewalkRight
//----------------------------------------------------------
unsigned char flash DinoBasic_SidewalkRight_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 20, 20, 20, 20, 20, 20
};
unsigned char flash DinoBasic_SidewalkRight_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 30, 30, 30, 30, 30, 30
};
unsigned char flash DinoBasic_SidewalkRight_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DinoBasic_SidewalkRight_Frames[6]={
	   30,    5,    8,    3,    1,   15
};
unsigned int flash DinoBasic_SidewalkRight_TrTime[6]={
	 1000,  150,  310,  200,  120,  300
};
unsigned char flash DinoBasic_SidewalkRight_Position[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:0 - Data
	{ 126,167,222, 98,110,125, 84, 29,155,142, 89,127, 47,159,112,171 },	// Idx:1 - Data
	{ 139,163,230,100,120,142, 87, 14,150,159, 89,127, 47,159,112,171 },	// Idx:2 - Scene_1
	{ 108,164,224, 97,106,151, 80, 28,153,167, 89,127, 47,159,112,171 },	// Idx:3 - Scene_2
	{ 126,166,222, 98,113,125, 84, 29,155,142, 89,127, 47,159,112,171 },	// Idx:4 - Data
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 } 	// Idx:5 - Scene_4
};
unsigned char flash DinoBasic_SidewalkRight_Torque[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Data
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:1 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:2 - Scene_1
	{   0,  0,  0,  0,  0,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:3 - Scene_2
	{   0,  0,  0,  0,  0,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4,  4 },	// Idx:4 - Data
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:5 - Scene_4
};
unsigned char flash DinoBasic_SidewalkRight_Port[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1 },	// Idx:0 - Data
	{   0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1 },	// Idx:1 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_1
	{   0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1 },	// Idx:3 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:5 - Scene_4
};
//----------------------------------------------------------
// Motion Name : DinoBasic_TurnLeft
//----------------------------------------------------------
unsigned char flash DinoBasic_TurnLeft_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DinoBasic_TurnLeft_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DinoBasic_TurnLeft_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DinoBasic_TurnLeft_Frames[6]={
	   30,    1,    1,   10,   10,   10
};
unsigned int flash DinoBasic_TurnLeft_TrTime[6]={
	 1000,  200,  200,  500,  500,  500
};
unsigned char flash DinoBasic_TurnLeft_Position[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:0 - Data
	{ 125,183,216,105,108,126, 72, 49,163,132, 89,127, 47,159,112,171 },	// Idx:1 - Scene_1
	{ 125,204,184, 93,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:2 - Scene_2
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,155, 30,159,140,125 },	// Idx:3 - Scene_3
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,133, 30,159,149,202 },	// Idx:4 - Scene_4
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 } 	// Idx:5 - Scene_5
};
unsigned char flash DinoBasic_TurnLeft_Torque[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - Scene_1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - Scene_2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - Scene_3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - Scene_4
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 } 	// Idx:5 - Scene_5
};
unsigned char flash DinoBasic_TurnLeft_Port[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0 },	// Idx:0 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - Scene_3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - Scene_4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:5 - Scene_5
};
//----------------------------------------------------------
// Motion Name : DinoBasic_TurnRight
//----------------------------------------------------------
unsigned char flash DinoBasic_TurnRight_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DinoBasic_TurnRight_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DinoBasic_TurnRight_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DinoBasic_TurnRight_Frames[7]={
	   10,   10,    1,    5,   10,   10,   10
};
unsigned int flash DinoBasic_TurnRight_TrTime[7]={
	  500,  200,  200,  200,  500,  500,  500
};
unsigned char flash DinoBasic_TurnRight_Position[8][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:0 - Scene_1
	{ 131,179,199, 88,114,126, 72, 49,163,141, 89,122, 47,159,112,171 },	// Idx:1 - Scene_1
	{ 124,179,199, 88,120,134, 74, 15,126,145, 89,122, 47,159,112,171 },	// Idx:2 - Scene_2
	{ 124,179,199, 88,108,124, 55, 57,152,142, 89,122, 47,159,113,171 },	// Idx:3 - Scene_3
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89, 99, 34,159,137,130 },	// Idx:4 - Scene_4
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,125, 30,159,156,204 },	// Idx:5 - Scene_5
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 } 	// Idx:6 - Scene_6
};
unsigned char flash DinoBasic_TurnRight_Torque[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Scene_1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - Scene_1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - Scene_2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - Scene_3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - Scene_4
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:5 - Scene_5
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 } 	// Idx:6 - Scene_6
};
unsigned char flash DinoBasic_TurnRight_Port[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - Scene_3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - Scene_4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:5 - Scene_5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:6 - Scene_6
};
//----------------------------------------------------------
// Motion Name : DinoBasic_PunchLeft
//----------------------------------------------------------
unsigned char flash DinoBasic_PunchLeft_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DinoBasic_PunchLeft_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DinoBasic_PunchLeft_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DinoBasic_PunchLeft_Frames[4]={
	   30,   10,    1,   50
};
unsigned int flash DinoBasic_PunchLeft_TrTime[4]={
	 1000,  500,  500, 1000
};
unsigned char flash DinoBasic_PunchLeft_Position[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:0 - Data
	{ 124,156,199, 88,108,125, 99, 49,163,141, 89,127, 47,159,112,171 },	// Idx:1 - Scene_1
	{ 124,156,199, 88,108,125, 99, 49,163,141, 89,213, 32,159,111,142 },	// Idx:2 - Data
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 } 	// Idx:3 - Scene_2
};
unsigned char flash DinoBasic_PunchLeft_Torque[4][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - Scene_1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 } 	// Idx:3 - Scene_2
};
unsigned char flash DinoBasic_PunchLeft_Port[4][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - Scene_1
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:2 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:3 - Scene_2
};
//----------------------------------------------------------
// Motion Name : DinoBasic_PunchRight
//----------------------------------------------------------
unsigned char flash DinoBasic_PunchRight_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DinoBasic_PunchRight_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DinoBasic_PunchRight_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DinoBasic_PunchRight_Frames[4]={
	   20,   10,    1,   50
};
unsigned int flash DinoBasic_PunchRight_TrTime[4]={
	  500,  500,  500, 1000
};
unsigned char flash DinoBasic_PunchRight_Position[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:0 - Data
	{ 125,156,199, 88,108,126, 99, 49,163,141, 89,127, 47,159,112,171 },	// Idx:1 - Scene_1
	{ 125,156,199, 88,108,126, 99, 49,163,141, 89, 43, 47,159,112,160 },	// Idx:2 - Data
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 } 	// Idx:3 - Scene_2
};
unsigned char flash DinoBasic_PunchRight_Torque[4][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - Scene_1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 } 	// Idx:3 - Scene_2
};
unsigned char flash DinoBasic_PunchRight_Port[4][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - Scene_1
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:2 - Data
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:3 - Scene_2
};
//----------------------------------------------------------
// Motion Name : DinoBasic_GetupFront
//----------------------------------------------------------
unsigned char flash DinoBasic_GetupFront_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DinoBasic_GetupFront_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DinoBasic_GetupFront_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DinoBasic_GetupFront_Frames[6]={
	   20,   30,   50,   30,   50,   50
};
unsigned int flash DinoBasic_GetupFront_TrTime[6]={
	  500, 2000, 1000, 1000, 1000, 1000
};
unsigned char flash DinoBasic_GetupFront_Position[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:0 - Data
	{ 125,179,199, 88,108,109,160, 89,198,140, 89,134,115,159,177,170 },	// Idx:1 - Scene_1
	{ 125,179,199, 88,108,195,154, 72,203,145, 89, 59,110,159,155,181 },	// Idx:2 - Scene_2
	{ 125,179,199, 88,108,203,169, 13,203,172, 89, 49, 32,159,134,204 },	// Idx:3 - Scene_3
	{ 141,184,205, 87, 93,165, 99,  4,152,153, 89, 99, 63,159,134,186 },	// Idx:4 - Scene_4
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 } 	// Idx:5 - Scene_5
};
unsigned char flash DinoBasic_GetupFront_Torque[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - Scene_1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - Scene_2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - Scene_3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - Scene_4
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 } 	// Idx:5 - Scene_5
};
unsigned char flash DinoBasic_GetupFront_Port[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_2
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:3 - Scene_3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - Scene_4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:5 - Scene_5
};
//----------------------------------------------------------
// Motion Name : DinoBasic_GetupBack
//----------------------------------------------------------
unsigned char flash DinoBasic_GetupBack_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DinoBasic_GetupBack_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DinoBasic_GetupBack_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DinoBasic_GetupBack_Frames[6]={
	   20,   50,   50,   50,   50,   50
};
unsigned int flash DinoBasic_GetupBack_TrTime[6]={
	  500, 2000, 1000, 1000, 1000, 1000
};
unsigned char flash DinoBasic_GetupBack_Position[7][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 },	// Idx:0 - Data
	{  90, 90,171,106,119,168, 72, 49,163,141, 89,138,122,159,158,171 },	// Idx:1 - Scene_1
	{  36,149,213, 94,107,208, 95, 49,163,140, 89,124,106,159,153,182 },	// Idx:2 - Scene_2
	{  33,129,248, 80, 52,218,130,  4,169,186, 89,125,106,159,153,181 },	// Idx:3 - Scene_3
	{  77,128,238, 80, 59,175,133,  4,171,190, 68,125, 33,159,166,180 },	// Idx:4 - Scene_4
	{ 125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171 } 	// Idx:5 - Scene_5
};
unsigned char flash DinoBasic_GetupBack_Torque[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Data
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - Scene_1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - Scene_2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - Scene_3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - Scene_4
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 } 	// Idx:5 - Scene_5
};
unsigned char flash DinoBasic_GetupBack_Port[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Data
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:1 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_2
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 },	// Idx:3 - Scene_3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - Scene_4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:5 - Scene_5
};
//==========================================================
// Project : [ DogyBasic ]
// Motion Builder Version : ver 1.1
// Date,Time : 2008-02-22 오후 3:32:50
// Format : ME_FMT#1
// Number of Motions : 10
// Number of wCKs : 16
//==========================================================
//unsigned char flash wCK_IDs[16]={
//	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
//};
//unsigned char flash MotionZeroPos[16]={
//	/* ID
//	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
//	125,199,164, 67,108,124, 50, 87,184,141, 88, 38,121,161,211,124
//};
//----------------------------------------------------------
// Motion Name : DogyBasic_WalkForward
//----------------------------------------------------------
unsigned char flash DogyBasic_WalkForward_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DogyBasic_WalkForward_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DogyBasic_WalkForward_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DogyBasic_WalkForward_Frames[51]={
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1
};
unsigned int flash DogyBasic_WalkForward_TrTime[51]={
	   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
   20,   20,   20,   20,  500
};
unsigned char flash DogyBasic_WalkForward_Position[52][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:0 - 0
	{ 161,209,127,127,223, 84, 41,127,127, 54,151, 39, 54,129,210,223 },	// Idx:1 - 1
	{ 152,209,127,127,210, 81, 41,127,127, 55,155, 39, 55,126,210,210 },	// Idx:2 - 2
	{ 142,209,127,127,195, 79, 41,127,127, 57,160, 39, 57,121,210,195 },	// Idx:3 - 3
	{ 142,209,127,127,195, 79, 41,127,127, 57,160, 39, 57,121,210,195 },	// Idx:4 - 4
	{ 146,209,127,127,197, 78, 41,127,127, 50,153, 39, 50,119,210,197 },	// Idx:5 - 5
	{ 150,209,127,127,198, 77, 41,127,127, 43,147, 39, 43,117,210,198 },	// Idx:6 - 6
	{ 154,209,127,127,199, 78, 41,127,127, 36,141, 39, 36,114,210,199 },	// Idx:7 - 7
	{ 157,209,127,127,200, 79, 41,127,127, 31,135, 39, 31,111,210,200 },	// Idx:8 - 8
	{ 161,209,127,127,200, 83, 41,127,127, 31,131, 39, 31,107,210,200 },	// Idx:9 - 9
	{ 164,209,127,127,199, 89, 41,127,127, 36,130, 39, 36,104,210,199 },	// Idx:10 - 10
	{ 167,209,127,127,198, 95, 41,127,127, 43,129, 39, 43,100,210,198 },	// Idx:11 - 11
	{ 169,209,127,127,197,101, 41,127,127, 50,130, 39, 50, 96,210,197 },	// Idx:12 - 12
	{ 171,209,127,127,195,108, 41,127,127, 57,131, 39, 57, 92,210,195 },	// Idx:13 - 13
	{ 171,209,127,127,195,108, 41,127,127, 57,131, 39, 57, 92,210,195 },	// Idx:14 - 14
	{ 172,209,127,127,202,104, 41,127,127, 55,133, 39, 55, 99,210,202 },	// Idx:15 - 15
	{ 173,209,127,127,209,100, 41,127,127, 54,135, 39, 54,105,210,209 },	// Idx:16 - 16
	{ 172,209,127,127,216, 96, 41,127,127, 53,138, 39, 53,111,210,216 },	// Idx:17 - 17
	{ 171,209,127,127,221, 93, 41,127,127, 52,141, 39, 52,117,210,221 },	// Idx:18 - 18
	{ 167,209,127,127,221, 89, 41,127,127, 52,145, 39, 52,121,210,221 },	// Idx:19 - 19
	{ 161,209,127,127,216, 86, 41,127,127, 53,148, 39, 53,122,210,216 },	// Idx:20 - 20
	{ 155,209,127,127,209, 83, 41,127,127, 54,152, 39, 54,123,210,209 },	// Idx:21 - 21
	{ 149,209,127,127,202, 81, 41,127,127, 55,156, 39, 55,122,210,202 },	// Idx:22 - 22
	{ 142,209,127,127,195, 79, 41,127,127, 57,160, 39, 57,121,210,195 },	// Idx:23 - 23
	{ 142,209,127,127,195, 79, 41,127,127, 57,160, 39, 57,121,210,195 },	// Idx:24 - 24
	{ 146,209,127,127,197, 78, 41,127,127, 50,153, 39, 50,119,210,197 },	// Idx:25 - 25
	{ 150,209,127,127,198, 77, 41,127,127, 43,147, 39, 43,117,210,198 },	// Idx:26 - 26
	{ 154,209,127,127,199, 78, 41,127,127, 36,141, 39, 36,114,210,199 },	// Idx:27 - 27
	{ 157,209,127,127,200, 79, 41,127,127, 31,135, 39, 31,111,210,200 },	// Idx:28 - 28
	{ 161,209,127,127,200, 83, 41,127,127, 31,131, 39, 31,107,210,200 },	// Idx:29 - 29
	{ 164,209,127,127,199, 89, 41,127,127, 36,130, 39, 36,104,210,199 },	// Idx:30 - 30
	{ 167,209,127,127,198, 95, 41,127,127, 43,129, 39, 43,100,210,198 },	// Idx:31 - 31
	{ 169,209,127,127,197,101, 41,127,127, 50,130, 39, 50, 96,210,197 },	// Idx:32 - 32
	{ 171,209,127,127,195,108, 41,127,127, 57,131, 39, 57, 92,210,195 },	// Idx:33 - 33
	{ 171,209,127,127,195,108, 41,127,127, 57,131, 39, 57, 92,210,195 },	// Idx:34 - 34
	{ 172,209,127,127,202,104, 41,127,127, 55,133, 39, 55, 99,210,202 },	// Idx:35 - 35
	{ 173,209,127,127,209,100, 41,127,127, 54,135, 39, 54,105,210,209 },	// Idx:36 - 36
	{ 172,209,127,127,216, 96, 41,127,127, 53,138, 39, 53,111,210,216 },	// Idx:37 - 37
	{ 171,209,127,127,221, 93, 41,127,127, 52,141, 39, 52,117,210,221 },	// Idx:38 - 38
	{ 167,209,127,127,221, 89, 41,127,127, 52,145, 39, 52,121,210,221 },	// Idx:39 - 39
	{ 161,209,127,127,216, 86, 41,127,127, 53,148, 39, 53,122,210,216 },	// Idx:40 - 40
	{ 155,209,127,127,209, 83, 41,127,127, 54,152, 39, 54,123,210,209 },	// Idx:41 - 41
	{ 149,209,127,127,202, 81, 41,127,127, 55,156, 39, 55,122,210,202 },	// Idx:42 - 42
	{ 142,209,127,127,195, 79, 41,127,127, 57,160, 39, 57,121,210,195 },	// Idx:43 - 43
	{ 142,209,127,127,195, 79, 41,127,127, 57,160, 39, 57,121,210,195 },	// Idx:44 - 44
	{ 146,209,127,127,197, 78, 41,127,127, 50,153, 39, 50,119,210,197 },	// Idx:45 - 45
	{ 150,209,127,127,198, 77, 41,127,127, 43,147, 39, 43,117,210,198 },	// Idx:46 - 46
	{ 154,209,127,127,199, 78, 41,127,127, 36,141, 39, 36,114,210,199 },	// Idx:47 - 47
	{ 157,209,127,127,200, 79, 41,127,127, 31,135, 39, 31,111,210,200 },	// Idx:48 - 48
	{ 161,209,127,127,200, 83, 41,127,127, 31,131, 39, 31,107,210,200 },	// Idx:49 - 49
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 } 	// Idx:50 - Scene_50
};
unsigned char flash DogyBasic_WalkForward_Torque[51][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - 0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 4
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:5 - 5
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:6 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:7 - 7
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:8 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:9 - 9
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:10 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:11 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:12 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:13 - 13
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:14 - 14
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:15 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:16 - 16
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:17 - 17
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:18 - 18
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:19 - 19
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:20 - 20
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:21 - 21
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:22 - 22
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:23 - 23
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:24 - 24
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:25 - 25
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:26 - 26
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:27 - 27
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:28 - 28
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:29 - 29
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:30 - 30
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:31 - 31
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:32 - 32
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:33 - 33
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:34 - 34
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:35 - 35
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:36 - 36
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:37 - 37
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:38 - 38
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:39 - 39
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:40 - 40
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:41 - 41
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:42 - 42
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:43 - 43
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:44 - 44
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:45 - 45
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:46 - 46
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:47 - 47
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:48 - 48
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:49 - 49
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 } 	// Idx:50 - Scene_50
};
unsigned char flash DogyBasic_WalkForward_Port[51][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - 0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - 1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - 2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:5 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 6
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 7
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:8 - 8
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:9 - 9
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:10 - 10
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:11 - 11
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:12 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:13 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:14 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:15 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:16 - 16
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:17 - 17
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:18 - 18
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:19 - 19
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:20 - 20
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:21 - 21
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:22 - 22
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:23 - 23
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:24 - 24
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:25 - 25
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:26 - 26
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:27 - 27
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:28 - 28
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:29 - 29
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:30 - 30
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:31 - 31
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:32 - 32
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:33 - 33
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:34 - 34
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:35 - 35
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:36 - 36
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:37 - 37
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:38 - 38
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:39 - 39
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:40 - 40
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:41 - 41
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:42 - 42
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:43 - 43
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:44 - 44
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:45 - 45
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:46 - 46
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:47 - 47
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:48 - 48
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:49 - 49
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:50 - Scene_50
};
//----------------------------------------------------------
// Motion Name : DogyBasic_SidewalkLeft
//----------------------------------------------------------
unsigned char flash DogyBasic_SidewalkLeft_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DogyBasic_SidewalkLeft_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DogyBasic_SidewalkLeft_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DogyBasic_SidewalkLeft_Frames[20]={
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1
};
unsigned int flash DogyBasic_SidewalkLeft_TrTime[20]={
	   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
   20,   20,   20,   20
};
unsigned char flash DogyBasic_SidewalkLeft_Position[21][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 159,208,127,127,200, 91, 43,127,127, 52,143, 39, 52,109,210,200 },
	{ 159,208,127,127,200, 91, 43,127,127, 52,143, 39, 52,109,210,200 },	// Idx:0 - 0
	{ 159,206,127,127,200, 88, 47,127,127, 46,140, 37, 46,109,212,200 },	// Idx:1 - 1
	{ 159,205,127,127,200, 86, 49,127,127, 43,138, 36, 43,109,213,200 },	// Idx:2 - 2
	{ 159,204,127,127,200, 85, 50,127,127, 40,137, 35, 40,109,214,200 },	// Idx:3 - 3
	{ 159,203,127,127,200, 85, 52,127,127, 40,137, 34, 40,109,215,200 },	// Idx:4 - 4
	{ 159,202,127,127,200, 86, 54,127,127, 43,138, 33, 43,109,216,200 },	// Idx:5 - 5
	{ 159,201,127,127,200, 88, 56,127,127, 46,140, 32, 46,109,217,200 },	// Idx:6 - 6
	{ 159,200,127,127,200, 89, 58,127,127, 49,141, 31, 49,109,218,200 },	// Idx:7 - 7
	{ 159,200,127,127,200, 91, 59,127,127, 52,143, 31, 52,109,218,200 },	// Idx:8 - 8
	{ 159,206,127,127,200, 91, 44,127,127, 52,143, 37, 52,109,212,200 },	// Idx:9 - 9
	{ 161,207,127,127,203, 91, 43,127,127, 52,143, 38, 52,111,211,203 },	// Idx:10 - 10
	{ 162,208,127,127,206, 91, 42,127,127, 52,143, 39, 52,112,210,206 },	// Idx:11 - 11
	{ 164,209,127,127,209, 91, 41,127,127, 52,143, 40, 52,114,209,209 },	// Idx:12 - 12
	{ 165,210,127,127,212, 91, 40,127,127, 52,143, 41, 52,115,208,212 },	// Idx:13 - 13
	{ 165,211,127,127,212, 91, 39,127,127, 52,143, 42, 52,115,207,212 },	// Idx:14 - 14
	{ 164,212,127,127,209, 91, 38,127,127, 52,143, 43, 52,114,206,209 },	// Idx:15 - 15
	{ 162,213,127,127,206, 91, 37,127,127, 52,143, 44, 52,112,205,206 },	// Idx:16 - 16
	{ 161,214,127,127,203, 91, 36,127,127, 52,143, 45, 52,111,204,203 },	// Idx:17 - 17
	{ 159,214,127,127,200, 91, 36,127,127, 52,143, 45, 52,109,204,200 },	// Idx:18 - 18
	{ 159,214,127,127,200, 91, 36,127,127, 52,143, 45, 52,109,204,200 } 	// Idx:19 - 19
};
unsigned char flash DogyBasic_SidewalkLeft_Torque[20][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - 0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 4
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:5 - 5
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:6 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:7 - 7
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:8 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:9 - 9
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:10 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:11 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:12 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:13 - 13
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:14 - 14
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:15 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:16 - 16
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:17 - 17
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:18 - 18
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:19 - 19
};
unsigned char flash DogyBasic_SidewalkLeft_Port[20][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - 0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - 1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - 2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:5 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 6
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 7
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:8 - 8
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:9 - 9
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:10 - 10
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:11 - 11
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:12 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:13 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:14 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:15 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:16 - 16
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:17 - 17
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:18 - 18
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:19 - 19
};
//----------------------------------------------------------
// Motion Name : DogyBasic_SidewalkRight
//----------------------------------------------------------
unsigned char flash DogyBasic_SidewalkRight_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DogyBasic_SidewalkRight_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DogyBasic_SidewalkRight_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DogyBasic_SidewalkRight_Frames[20]={
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1
};
unsigned int flash DogyBasic_SidewalkRight_TrTime[20]={
	   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
   20,   20,   20,   20
};
unsigned char flash DogyBasic_SidewalkRight_Position[21][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 159,208,127,127,200, 91, 43,127,127, 52,143, 39, 52,109,210,200 },
	{ 159,208,127,127,200, 91, 43,127,127, 52,143, 39, 52,109,210,200 },	// Idx:0 - 0
	{ 162,206,127,127,206, 91, 47,127,127, 52,143, 37, 52,112,212,206 },	// Idx:1 - 1
	{ 164,205,127,127,209, 91, 49,127,127, 52,143, 36, 52,114,213,209 },	// Idx:2 - 2
	{ 165,204,127,127,212, 91, 50,127,127, 52,143, 35, 52,115,214,212 },	// Idx:3 - 3
	{ 165,203,127,127,212, 91, 52,127,127, 52,143, 34, 52,115,215,212 },	// Idx:4 - 4
	{ 164,202,127,127,209, 91, 54,127,127, 52,143, 33, 52,114,216,209 },	// Idx:5 - 5
	{ 162,201,127,127,206, 91, 56,127,127, 52,143, 32, 52,112,217,206 },	// Idx:6 - 6
	{ 161,200,127,127,203, 91, 58,127,127, 52,143, 31, 52,111,218,203 },	// Idx:7 - 7
	{ 159,200,127,127,200, 91, 59,127,127, 52,143, 31, 52,109,218,200 },	// Idx:8 - 8
	{ 159,206,127,127,200, 91, 44,127,127, 52,143, 37, 52,109,212,200 },	// Idx:9 - 9
	{ 159,207,127,127,200, 89, 43,127,127, 49,141, 38, 49,109,211,200 },	// Idx:10 - 10
	{ 159,208,127,127,200, 88, 42,127,127, 46,140, 39, 46,109,210,200 },	// Idx:11 - 11
	{ 159,209,127,127,200, 86, 41,127,127, 43,138, 40, 43,109,209,200 },	// Idx:12 - 12
	{ 159,210,127,127,200, 85, 40,127,127, 40,137, 41, 40,109,208,200 },	// Idx:13 - 13
	{ 159,211,127,127,200, 85, 39,127,127, 40,137, 42, 40,109,207,200 },	// Idx:14 - 14
	{ 159,212,127,127,200, 86, 38,127,127, 43,138, 43, 43,109,206,200 },	// Idx:15 - 15
	{ 159,213,127,127,200, 88, 37,127,127, 46,140, 44, 46,109,205,200 },	// Idx:16 - 16
	{ 159,214,127,127,200, 89, 36,127,127, 49,141, 45, 49,109,204,200 },	// Idx:17 - 17
	{ 159,214,127,127,200, 91, 36,127,127, 52,143, 45, 52,109,204,200 },	// Idx:18 - 18
	{ 159,214,127,127,200, 91, 36,127,127, 52,143, 45, 52,109,204,200 } 	// Idx:19 - 19
};
unsigned char flash DogyBasic_SidewalkRight_Torque[20][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - 0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 4
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:5 - 5
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:6 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:7 - 7
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:8 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:9 - 9
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:10 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:11 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:12 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:13 - 13
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:14 - 14
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:15 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:16 - 16
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:17 - 17
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:18 - 18
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:19 - 19
};
unsigned char flash DogyBasic_SidewalkRight_Port[20][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - 0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - 1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - 2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:5 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 6
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 7
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:8 - 8
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:9 - 9
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:10 - 10
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:11 - 11
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:12 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:13 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:14 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:15 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:16 - 16
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:17 - 17
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:18 - 18
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:19 - 19
};
//----------------------------------------------------------
// Motion Name : DogyBasic_TurnLeft
//----------------------------------------------------------
unsigned char flash DogyBasic_TurnLeft_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DogyBasic_TurnLeft_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DogyBasic_TurnLeft_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DogyBasic_TurnLeft_Frames[10]={
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1
};
unsigned int flash DogyBasic_TurnLeft_TrTime[10]={
	   20,   20,   20,   20,   20,   20,   20,   20,   20,   20
};
unsigned char flash DogyBasic_TurnLeft_Position[11][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:0 - 0
	{ 166,210,120,127,198, 71, 40,127,127, 29,123, 38, 29,116,211,198 },	// Idx:1 - 1
	{ 169,211,115,127,197, 74, 39,127,127, 42,126, 37, 42,119,212,197 },	// Idx:2 - 2
	{ 171,211,107,127,195, 79, 39,127,127, 57,131, 37, 57,121,212,195 },	// Idx:3 - 3
	{ 171,211, 90,127,195, 79, 39,127,127, 57,131, 37, 57,121,212,195 },	// Idx:4 - 4
	{ 176,210,101,127,210, 81, 40,127,127, 55,133, 38, 55,126,211,210 },	// Idx:5 - 5
	{ 179,210,106,127,223, 84, 40,127,127, 54,136, 38, 54,129,211,223 },	// Idx:6 - 6
	{ 169,209,112,127,212, 87, 41,127,127, 53,139, 39, 53,119,210,212 },	// Idx:7 - 7
	{ 159,209,116,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:8 - 8
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 } 	// Idx:9 - 9
};
unsigned char flash DogyBasic_TurnLeft_Torque[10][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - 0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 4
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:5 - 5
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:6 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:7 - 7
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:8 - 8
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:9 - 9
};
unsigned char flash DogyBasic_TurnLeft_Port[10][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - 0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - 1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - 2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:5 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 6
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 7
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:8 - 8
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:9 - 9
};
//----------------------------------------------------------
// Motion Name : DogyBasic_TurnRight
//----------------------------------------------------------
unsigned char flash DogyBasic_TurnRight_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DogyBasic_TurnRight_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DogyBasic_TurnRight_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DogyBasic_TurnRight_Frames[10]={
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1
};
unsigned int flash DogyBasic_TurnRight_TrTime[10]={
	   20,   20,   20,   20,   20,   20,   20,   20,   20,   20
};
unsigned char flash DogyBasic_TurnRight_Position[11][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:0 - 0
	{ 179,210,134,127,223, 84, 40,127,127, 54,136, 38, 54,129,211,223 },	// Idx:1 - 1
	{ 176,211,144,127,210, 81, 39,127,127, 55,133, 37, 55,126,212,210 },	// Idx:2 - 2
	{ 171,211,150,127,195, 79, 39,127,127, 57,131, 37, 57,121,212,195 },	// Idx:3 - 3
	{ 171,211,152,127,195, 79, 39,127,127, 57,131, 37, 57,121,212,195 },	// Idx:4 - 4
	{ 169,210,147,127,197, 74, 40,127,127, 42,126, 38, 42,119,211,197 },	// Idx:5 - 5
	{ 166,210,143,127,198, 71, 40,127,127, 29,123, 38, 29,116,211,198 },	// Idx:6 - 6
	{ 163,209,139,127,199, 81, 41,127,127, 40,133, 39, 40,113,210,199 },	// Idx:7 - 7
	{ 159,209,133,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:8 - 8
	{ 159,209,128,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 } 	// Idx:9 - 9
};
unsigned char flash DogyBasic_TurnRight_Torque[10][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - 0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 4
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:5 - 5
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:6 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:7 - 7
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:8 - 8
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:9 - 9
};
unsigned char flash DogyBasic_TurnRight_Port[10][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - 0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - 1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - 2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:5 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 6
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 7
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:8 - 8
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:9 - 9
};
//----------------------------------------------------------
// Motion Name : DogyBasic_GetupBack
//----------------------------------------------------------
unsigned char flash DogyBasic_GetupBack_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DogyBasic_GetupBack_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DogyBasic_GetupBack_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DogyBasic_GetupBack_Frames[5]={
	    1,    1,    1,    1,    5
};
unsigned int flash DogyBasic_GetupBack_TrTime[5]={
	  400,  400, 1000,  400,  600
};
unsigned char flash DogyBasic_GetupBack_Position[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:0 - Scene_0
	{ 159,209,127,127,200,241, 41, 90,127, 52,143, 39, 52,109,210,200 },	// Idx:1 - Scene_1
	{ 159,209,127,127,200,241, 41, 85,127, 52,143, 39, 52, 13,210,146 },	// Idx:2 - Scene_2
	{ 159,209,127,127,200,241,109, 85,127, 52,143, 39, 52, 13,210,146 },	// Idx:3 - Scene_3
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 } 	// Idx:4 - Scene_4
};
unsigned char flash DogyBasic_GetupBack_Torque[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Scene_0
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:1 - Scene_1
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:2 - Scene_2
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:3 - Scene_3
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:4 - Scene_4
};
unsigned char flash DogyBasic_GetupBack_Port[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Scene_0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - Scene_3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:4 - Scene_4
};
//----------------------------------------------------------
// Motion Name : DogyBasic_GetupFront
//----------------------------------------------------------
unsigned char flash DogyBasic_GetupFront_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DogyBasic_GetupFront_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DogyBasic_GetupFront_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DogyBasic_GetupFront_Frames[5]={
	    1,    1,    1,    1,    5
};
unsigned int flash DogyBasic_GetupFront_TrTime[5]={
	  400,  400, 1000,  400,  600
};
unsigned char flash DogyBasic_GetupFront_Position[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:0 - Scene_0
	{  16,209,127,127,200, 91, 41,154,127, 52,143, 39, 52,109,210,200 },	// Idx:1 - Scene_1
	{  16,209,127,127,200, 91, 41,172,127, 52,244, 39,112,109,210,200 },	// Idx:2 - Scene_2
	{  16,123,127,127,200, 91, 41,172,127, 52,244, 39,112,109,210,200 },	// Idx:3 - Scene_3
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 } 	// Idx:4 - Scene_4
};
unsigned char flash DogyBasic_GetupFront_Torque[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Scene_0
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:1 - Scene_1
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:2 - Scene_2
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:3 - Scene_3
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:4 - Scene_4
};
unsigned char flash DogyBasic_GetupFront_Port[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Scene_0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - Scene_3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:4 - Scene_4
};
//----------------------------------------------------------
// Motion Name : DogyBasic_WalkBackward
//----------------------------------------------------------
unsigned char flash DogyBasic_WalkBackward_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DogyBasic_WalkBackward_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DogyBasic_WalkBackward_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DogyBasic_WalkBackward_Frames[20]={
	    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1
};
unsigned int flash DogyBasic_WalkBackward_TrTime[20]={
	   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
   20,   20,   20,   20
};
unsigned char flash DogyBasic_WalkBackward_Position[21][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:0 - 0
	{ 179,209,127,127,223, 99, 41,127,127, 54,136, 39, 54,111,210,223 },	// Idx:1 - 1
	{ 176,209,127,127,210,103, 41,127,127, 55,133, 39, 55,102,210,210 },	// Idx:2 - 2
	{ 171,209,127,127,195,108, 41,127,127, 57,131, 39, 57, 92,210,195 },	// Idx:3 - 3
	{ 171,209,127,127,195,108, 41,127,127, 57,131, 39, 57, 92,210,195 },	// Idx:4 - 4
	{ 169,209,127,127,197,101, 41,127,127, 50,130, 39, 50, 96,210,197 },	// Idx:5 - 5
	{ 167,209,127,127,198, 95, 41,127,127, 43,129, 39, 43,100,210,198 },	// Idx:6 - 6
	{ 164,209,127,127,199, 89, 41,127,127, 36,130, 39, 36,104,210,199 },	// Idx:7 - 7
	{ 161,209,127,127,200, 83, 41,127,127, 31,131, 39, 31,107,210,200 },	// Idx:8 - 8
	{ 157,209,127,127,200, 79, 41,127,127, 31,135, 39, 31,111,210,200 },	// Idx:9 - 9
	{ 154,209,127,127,199, 78, 41,127,127, 36,141, 39, 36,114,210,199 },	// Idx:10 - 10
	{ 150,209,127,127,198, 77, 41,127,127, 43,147, 39, 43,117,210,198 },	// Idx:11 - 11
	{ 146,209,127,127,197, 78, 41,127,127, 50,153, 39, 50,119,210,197 },	// Idx:12 - 12
	{ 142,209,127,127,195, 79, 41,127,127, 57,160, 39, 57,121,210,195 },	// Idx:13 - 13
	{ 142,209,127,127,195, 79, 41,127,127, 57,160, 39, 57,121,210,195 },	// Idx:14 - 14
	{ 152,209,127,127,210, 81, 41,127,127, 55,155, 39, 55,126,210,210 },	// Idx:15 - 15
	{ 161,209,127,127,223, 84, 41,127,127, 54,151, 39, 54,129,210,223 },	// Idx:16 - 16
	{ 161,209,127,127,212, 87, 41,127,127, 53,147, 39, 53,119,210,212 },	// Idx:17 - 17
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:18 - 18
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 } 	// Idx:19 - 19
};
unsigned char flash DogyBasic_WalkBackward_Torque[20][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - 0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - 1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - 2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - 3
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:4 - 4
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:5 - 5
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:6 - 6
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:7 - 7
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:8 - 8
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:9 - 9
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:10 - 10
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:11 - 11
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:12 - 12
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:13 - 13
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:14 - 14
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:15 - 15
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:16 - 16
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:17 - 17
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:18 - 18
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:19 - 19
};
unsigned char flash DogyBasic_WalkBackward_Port[20][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - 0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - 1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - 2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - 3
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:4 - 4
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:5 - 5
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:6 - 6
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:7 - 7
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:8 - 8
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:9 - 9
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:10 - 10
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:11 - 11
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:12 - 12
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:13 - 13
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:14 - 14
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:15 - 15
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:16 - 16
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:17 - 17
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:18 - 18
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:19 - 19
};
//----------------------------------------------------------
// Motion Name : DogyBasic_PunchLeft
//----------------------------------------------------------
unsigned char flash DogyBasic_PunchLeft_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DogyBasic_PunchLeft_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DogyBasic_PunchLeft_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DogyBasic_PunchLeft_Frames[4]={
	    1,    5,    1,    5
};
unsigned int flash DogyBasic_PunchLeft_TrTime[4]={
	  500,  300,  400,  300
};
unsigned char flash DogyBasic_PunchLeft_Position[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:0 - Scene_0
	{ 159,218,159,127,200, 91, 41,156,127, 27,143, 27, 52,109,194,200 },	// Idx:1 - Scene_1
	{ 149,218,199,127,200,180, 41,156,127, 94,143, 27, 52,109,194,200 },	// Idx:2 - Scene_2
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 } 	// Idx:3 - Scene_3
};
unsigned char flash DogyBasic_PunchLeft_Torque[4][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Scene_0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - Scene_1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - Scene_2
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 } 	// Idx:3 - Scene_3
};
unsigned char flash DogyBasic_PunchLeft_Port[4][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Scene_0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:3 - Scene_3
};
//----------------------------------------------------------
// Motion Name : DogyBasic_PunchRight
//----------------------------------------------------------
unsigned char flash DogyBasic_PunchRight_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash DogyBasic_PunchRight_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash DogyBasic_PunchRight_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash DogyBasic_PunchRight_Frames[4]={
	    1,    5,    1,    5
};
unsigned int flash DogyBasic_PunchRight_TrTime[4]={
	  500,  400,  400,  400
};
unsigned char flash DogyBasic_PunchRight_Position[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 },	// Idx:0 - Scene_0
	{ 159,209, 86,132,216, 91, 29, 97,127, 52,143, 54, 52,109,220,200 },	// Idx:1 - Scene_1
	{  75,209, 86,132,157, 91, 29, 97,127, 52,143, 54, 52,109,220,200 },	// Idx:2 - Scene_2
	{ 159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200 } 	// Idx:3 - Scene_3
};
unsigned char flash DogyBasic_PunchRight_Torque[4][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 },	// Idx:0 - Scene_0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - Scene_1
	{   0,  0,  2,  2,  0,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - Scene_2
	{   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3 } 	// Idx:3 - Scene_3
};
unsigned char flash DogyBasic_PunchRight_Port[4][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Scene_0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:3 - Scene_3
};
//==========================================================
// Project : [ test ]
// SoftWare : Motion Builder v1.16 beta
// Date,Time : 2008-11-18 오후 9:14:21
// Format : ME_FMT#1
// Number of Motions : 1
// Number of wCKs : 16
//==========================================================
unsigned char flash wCK_IDs[16]={
unsigned char flash wCK_IDs[16]={
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
};
unsigned char flash MotionZeroPos[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	125,202,162, 66,108,124, 48, 88,184,142, 90, 40,125,161,210,127
};
//----------------------------------------------------------
// Motion Name : MY_DEMO1
//----------------------------------------------------------
unsigned char flash MY_DEMO1_RuntimePGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
};
unsigned char flash MY_DEMO1_RuntimeDGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
};
unsigned char flash MY_DEMO1_RuntimeIGain[16]={
	/* ID
	  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
};
unsigned int flash MY_DEMO1_Frames[5]={
	   10,   40,   10,   10,   40
};
unsigned int flash MY_DEMO1_TrTime[5]={
	  500, 1000,  500,  500, 1000
};
unsigned char flash MY_DEMO1_Position[6][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 },	// Idx:0 - Scene_0
	{ 125,179,199, 88,108,126, 72, 49,163,141,187, 58, 46,199,205,205 },	// Idx:1 - Scene_1
	{ 125,179,199, 88,108,126, 72, 49,163,141,186,103, 46,199,205,205 },	// Idx:2 - Scene_2
	{ 125,179,199, 88,108,126, 72, 49,163,141,187, 58, 46,199,205,205 },	// Idx:3 - Scene_1
	{ 125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205 } 	// Idx:4 - Scene_4
};
unsigned char flash MY_DEMO1_Torque[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:0 - Scene_0
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:1 - Scene_1
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:2 - Scene_2
	{   2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2 },	// Idx:3 - Scene_1
	{   4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4 } 	// Idx:4 - Scene_4
};
unsigned char flash MY_DEMO1_Port[5][16]={
	/* ID
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 */
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:0 - Scene_0
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:1 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:2 - Scene_2
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	// Idx:3 - Scene_1
	{   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 } 	// Idx:4 - Scene_4
};
unsigned char flash fM1_BasicPose[16]={
/* ID
 0 ,1  ,2  ,3  ,4  ,5  ,6  ,7  ,8  ,9  , 10, 11, 12, 13, 14, 15 */
125,179,199, 88,108,126, 72, 49,163,141, 51, 47, 49,199,205,205};
unsigned char flash fM2_BasicPose[16]={
/* ID
 0 ,1  ,2  ,3  ,4  ,5  ,6  ,7  ,8  ,9  , 10, 11, 12, 13, 14, 15 */
125,179,199, 88,108,126, 72, 49,163,141, 89,127, 47,159,112,171};
unsigned char flash fM3_BasicPose[16]={
/* ID
 0 ,1  ,2  ,3  ,4  ,5  ,6  ,7  ,8  ,9  , 10, 11, 12, 13, 14, 15 */
159,209,127,127,200, 91, 41,127,127, 52,143, 39, 52,109,210,200};
//------------------------------------------------------------------------------
// 시리얼 포트로 한 문자를 전송하기 위한 함수
//------------------------------------------------------------------------------
void sciTx0Data(unsigned char td)
{
	while(!(UCSR0A & (1<<5)));
	UDR0 = td;
}
void sciTx1Data(unsigned char td)
{
	while(!((*(unsigned char *) 0x9b) & (1<<5)));
	(*(unsigned char *) 0x9c) = td;
}
//------------------------------------------------------------------------------
// 시리얼 포트로 한 문자를 받을때까지 대기하기 위한 함수
//------------------------------------------------------------------------------
unsigned char sciRx0Ready(void)
{
	unsigned int	startT;
	startT = g10MSEC;
	while(!(UCSR0A & (1<<7))){
        if(g10MSEC < startT){
            if((100 - startT + g10MSEC) > 20) break;
        }
		else if((g10MSEC-startT) > 20) break;
	}
	return UDR0;
}
unsigned char sciRx1Ready(void)
{
	unsigned int	startT;
	startT = g10MSEC;
	while(!((*(unsigned char *) 0x9b) & (1<<7))){
        if(g10MSEC < startT){
            if((100 - startT + g10MSEC) > 20) break;
        }
		else if((g10MSEC-startT) > 20) break;
	}
	return (*(unsigned char *) 0x9c);
}
//------------------------------------------------------------------------------
// wCK에게 동작 명령 패킷(4바이트)을 보내는 함수                                                                     */
//------------------------------------------------------------------------------
void SendOperCmd(unsigned char Data1,unsigned char Data2)
{
	unsigned char CheckSum; 
	CheckSum = (Data1^Data2)&0x7f;
	gTx0Buf[gTx0Cnt] = 0xFF ;
	gTx0Cnt++;
	gTx0Buf[gTx0Cnt] = Data1;
	gTx0Cnt++;
	gTx0Buf[gTx0Cnt] = Data2;
	gTx0Cnt++;
	gTx0Buf[gTx0Cnt] = CheckSum;
	gTx0Cnt++;
}
//------------------------------------------------------------------------------
// wCK의 파라미터를 설정할 때 사용한다
//------------------------------------------------------------------------------
void SendSetCmd(unsigned char ID, unsigned char Data1, unsigned char Data2, unsigned char Data3)
{
	unsigned char	CheckSum; 
	ID = (unsigned char)(7<<5)|ID; 
	CheckSum = (ID^Data1^Data2^Data3)&0x7f;
	gTx0Buf[gTx0Cnt] = 0xFF ;
	gTx0Cnt++;
	gTx0Buf[gTx0Cnt] = ID;
	gTx0Cnt++;
	gTx0Buf[gTx0Cnt] = Data1;
	gTx0Cnt++;
	gTx0Buf[gTx0Cnt] = Data2;
	gTx0Cnt++;
	gTx0Buf[gTx0Cnt] = Data3;
	gTx0Cnt++;
	gTx0Buf[gTx0Cnt] = CheckSum;
	gTx0Cnt++;
}
//------------------------------------------------------------------------------
// 위치 명령(Position Send Command)을 보내는 함수
//------------------------------------------------------------------------------
void PosSend(unsigned char ID, unsigned char Position, unsigned char SpeedLevel) 
{
	unsigned char Data1;
	Data1 = (SpeedLevel<<5) | ID;
	SendOperCmd(Data1,Position);
}
//------------------------------------------------------------------------------
// 브레이크 모드 명령을 보내는 함수
//------------------------------------------------------------------------------
void BreakModeCmdSend(void)
{
	unsigned char	Data1, Data2;
	unsigned char	CheckSum; 
	Data1 = (6<<5) | 31;
	Data2 = 0x20;
	CheckSum = (Data1^Data2)&0x7f;
	sciTx0Data(0xFF );
	sciTx0Data(Data1);
	sciTx0Data(Data2);
	sciTx0Data(CheckSum);
} 
//------------------------------------------------------------------------------
// 이동범위 설정 명령을 보내는 함수
//------------------------------------------------------------------------------
void BoundSetCmdSend(unsigned char ID, unsigned char B_L, unsigned char B_U)
{
	unsigned char	Data1, Data2;
	unsigned char	CheckSum; 
	Data1 = (7<<5) | ID;
	Data2 = 17;
	CheckSum = (Data1^Data2^B_U^B_L)&0x7f;
	sciTx0Data(0xFF );
	sciTx0Data(Data1);
	sciTx0Data(Data2);
	sciTx0Data(B_L);
	sciTx0Data(B_U);
	sciTx0Data(CheckSum);
}
//------------------------------------------------------------------------------
// 위치 읽기 명령(Position Send Command)을 보내는 함수
//------------------------------------------------------------------------------
unsigned int PosRead(unsigned char ID) 
{
	unsigned char	Data1, Data2;
	unsigned char	CheckSum; 
	unsigned int	startT;
	Data1 = (5<<5) | ID;
	Data2 = 0;
	gRx0Cnt = 0;
	CheckSum = (Data1^Data2)&0x7f;
	(UCSR0B &= 0xEF);
	sciTx0Data(0xFF );
	sciTx0Data(Data1);
	sciTx0Data(Data2);
	sciTx0Data(CheckSum);
	(UCSR0B |= 0x10);
	startT = g10MSEC;
	while(gRx0Cnt < 2){
        if(g10MSEC < startT){
            if((100 - startT + g10MSEC) > 20)
            	return 444;
        }
		else if((g10MSEC - startT) > 20) return 444;
	}
	return (unsigned int)gRx0Buf[8 - 1];
} 
//------------------------------------------------------------------------------
// 사운드 칩에게 명령 보내는 함수
//------------------------------------------------------------------------------
void SendToSoundIC(unsigned char cmd) 
{
	unsigned char	CheckSum; 
	gRx0Cnt = 0;
	CheckSum = (29^cmd)&0x7f;
	sciTx0Data(0xFF );
	delay_ms(1);
	sciTx0Data(29);
	delay_ms(1);
	sciTx0Data(cmd);
	delay_ms(1);
	sciTx0Data(CheckSum);
} 
//------------------------------------------------------------------------------
// PC와 통신할 때 사용
//------------------------------------------------------------------------------
void SendToPC(unsigned char Cmd, unsigned char CSize)
{
	sciTx1Data(0xFF);
	sciTx1Data(0xFF);
	sciTx1Data(0xAA);
	sciTx1Data(0x55);
	sciTx1Data(0xAA);
	sciTx1Data(0x55);
	sciTx1Data(0x37);
	sciTx1Data(0xBA);
	sciTx1Data(Cmd);
	sciTx1Data(F_PF);
	sciTx1Data(0);
	sciTx1Data(0);
	sciTx1Data(0);
	sciTx1Data(CSize);
}
//------------------------------------------------------------------------------
// Flash에서 모션 정보 읽기
//------------------------------------------------------------------------------
void GetMotionFromFlash(void)
{
	unsigned int	i;
	for(i=0;i<31;i++){
		Motion.wCK[i].Exist		= 0;
		Motion.wCK[i].RPgain	= 0;
		Motion.wCK[i].RDgain	= 0;
		Motion.wCK[i].RIgain	= 0;
		Motion.wCK[i].PortEn	= 0;
		Motion.wCK[i].InitPos	= 0;
		gPoseDelta[i] = 0;
	}
	gLastID = wCK_IDs[Motion.NumOfwCK-1];
	for(i=0;i<Motion.NumOfwCK;i++){
		Motion.wCK[wCK_IDs[i]].Exist	= 1;
		Motion.wCK[wCK_IDs[i]].RPgain	= *(gpPg_Table+i);
		Motion.wCK[wCK_IDs[i]].RDgain	= *(gpDg_Table+i);
		Motion.wCK[wCK_IDs[i]].RIgain	= *(gpIg_Table+i);
		Motion.wCK[wCK_IDs[i]].PortEn	= 1;
		Motion.wCK[wCK_IDs[i]].InitPos	= MotionZeroPos[i];
	}
	for(i=0;i<Motion.NumOfwCK;i++)
		gPoseDelta[i] = (int)eM_OriginPose[i] - (int)Motion.wCK[i].InitPos;
}
//------------------------------------------------------------------------------
// Runtime P,D,I 이득 송신
//------------------------------------------------------------------------------
void SendTGain(void)
{
	unsigned int	i;
	(UCSR0B &= 0x7F);
	(UCSR0B |= 0x40);
	while(gTx0Cnt);
	for(i=0;i<31;i++){
		if(Motion.wCK[i].Exist)
			SendSetCmd(i, 11, Motion.wCK[i].RPgain, Motion.wCK[i].RDgain);
	}
	gTx0BufIdx++;
	sciTx0Data(gTx0Buf[gTx0BufIdx-1]);
	while(gTx0Cnt);
	for(i=0;i<31;i++){
		if(Motion.wCK[i].Exist)
			SendSetCmd(i, 24, Motion.wCK[i].RIgain, Motion.wCK[i].RIgain);
	}
	gTx0BufIdx++;
	sciTx0Data(gTx0Buf[gTx0BufIdx-1]);
	delay_ms(5);
}
//------------------------------------------------------------------------------
// 확장 포트값 송신
//------------------------------------------------------------------------------
void SendExPortD(void)
{
	unsigned int	i;
	UCSR0B &= 0x7F;
	UCSR0B |= 0x40;
	while(gTx0Cnt);
	for(i=0;i<31;i++){
		if(Scene.wCK[i].Exist)
			SendSetCmd(i, 100, Scene.wCK[i].ExPortD, Scene.wCK[i].ExPortD);
	}
	gTx0BufIdx++;
	sciTx0Data(gTx0Buf[gTx0BufIdx-1]);
}
//------------------------------------------------------------------------------
// Flash에서 씬 정보 읽기
//------------------------------------------------------------------------------
void GetSceneFromFlash(void)
{
	unsigned int i;
		Scene.NumOfFrame = gpFN_Table[gScIdx];
	Scene.RTime = gpRT_Table[gScIdx];
	for(i=0; i < 31; i++){
		Scene.wCK[i].Exist		= 0;
		Scene.wCK[i].SPos		= 0;
		Scene.wCK[i].DPos		= 0;
		Scene.wCK[i].Torq		= 0;
		Scene.wCK[i].ExPortD	= 0;
	}
	for(i=0; i < Motion.NumOfwCK; i++){
		Scene.wCK[wCK_IDs[i]].Exist		= 1;
		Scene.wCK[wCK_IDs[i]].SPos		= gpPos_Table[Motion.NumOfwCK*gScIdx+i];
		Scene.wCK[wCK_IDs[i]].DPos		= gpPos_Table[Motion.NumOfwCK*(gScIdx+1)+i];
		Scene.wCK[wCK_IDs[i]].Torq		= gpT_Table[Motion.NumOfwCK*gScIdx+i];
		Scene.wCK[wCK_IDs[i]].ExPortD	= gpE_Table[Motion.NumOfwCK*gScIdx+i];
	}
	UCSR0B &= 0x7F;
	UCSR0B |= 0x40;
	delay_us(1300);
}
//------------------------------------------------------------------------------
// 프레임 송신 간격 계산
//------------------------------------------------------------------------------
void CalcFrameInterval(void)
{
	float	tmp;
	if((Scene.RTime / Scene.NumOfFrame) < 20){
		F_ERR_CODE = 6;
		return;
	}
	tmp = (float)Scene.RTime * 14.4;
	tmp = tmp  / (float)Scene.NumOfFrame;
	TxInterval = 65535 - (unsigned int)tmp - 5;
	(PORTA &= 0xDF);
	F_SCENE_PLAYING = 1;
	F_MOTION_STOPPED = 0;
	TCCR1B = 0x05;
	if(TxInterval <= 65509)	
		TCNT1 = TxInterval+26;
	else
		TCNT1 = 65535;
	TIFR |= 0x04;
	TIMSK |= 0x04;
}
//------------------------------------------------------------------------------
// 프레임당 단위 이동량 계산
//------------------------------------------------------------------------------
void CalcUnitMove(void)
{
	unsigned int	i;
	for(i=0; i < 31; i++){
		if(Scene.wCK[i].Exist){
			if(Scene.wCK[i].SPos != Scene.wCK[i].DPos){
				gUnitD[i] = (float)((int)Scene.wCK[i].DPos - (int)Scene.wCK[i].SPos);
				gUnitD[i] = (float)(gUnitD[i] / Scene.NumOfFrame);
				if(gUnitD[i] > 253)			gUnitD[i] = 254;
				else if(gUnitD[i] < -253)	gUnitD[i] = -254;
			}
			else
				gUnitD[i] = 0;
		}
	}
	gFrameIdx = 0;
}
//------------------------------------------------------------------------------
// 한 프레임 송신 준비
//------------------------------------------------------------------------------
void MakeFrame(void)
{
	unsigned char	i, tmp;
	int		wTmp;
	while(gTx0Cnt);
	gFrameIdx++;
	for(i=0; i < 31; i++){
		if(Scene.wCK[i].Exist){
			if(Scene.wCK[i].Torq < 5){
				wTmp = (int)Scene.wCK[i].SPos + Round((float)gFrameIdx*gUnitD[i],1 );
				if(Motion.PF != 4){
					wTmp = wTmp + gPoseDelta[i];
				}
				if(wTmp > 254)		wTmp = 254;
				else if(wTmp < 1)	wTmp = 1;
				tmp = (unsigned char)wTmp;
			}
			else{
				tmp = Scene.wCK[i].DPos;
			}
			PosSend(i,tmp, Scene.wCK[i].Torq);
		}
	}
}
//------------------------------------------------------------------------------
// 한 프레임 송신
//------------------------------------------------------------------------------
void SendFrame(void)
{
	if(gTx0Cnt == 0)	return;
	gTx0BufIdx++;
	sciTx0Data(gTx0Buf[gTx0BufIdx-1]);
}
//------------------------------------------------------------------------------
// HUNO의 0점 자세, HUNO, DINO, DOGY 기본 자세 동작
//------------------------------------------------------------------------------
void BasicPose(unsigned char PF, unsigned int NOF, unsigned int RT, unsigned char TQ)
{
	unsigned char	trigger = 0;
	unsigned int	i;
	if(F_CHARGING)	return;
	if(F_PF == 4)	return;
	if(F_PF != 1 && PF == 0){
		F_ERR_CODE = 5;
		return;
	}
		if(NOF != 1){
		if(PF == 1)		SendToSoundIC(1);
		else if(PF == 3)	SendToSoundIC(9);
	}
	Motion.PF = PF;
	Motion.NumOfScene = 1;
	Motion.NumOfwCK = 16;
	gLastID = 15;
	for(i=0; i < Motion.NumOfwCK; i++){
		Motion.wCK[i].Exist		= 1;
		if(i>9){
			Motion.wCK[i].RPgain	= 15;
			Motion.wCK[i].RDgain	= 25;
		}
		else{
			Motion.wCK[i].RPgain	= 20;
			Motion.wCK[i].RDgain	= 30;
		}
		Motion.wCK[i].RIgain	= 0;
		Motion.wCK[i].PortEn	= 1;
		Motion.wCK[i].InitPos	= (int)MotionZeroPos[i];
		gPoseDelta[i] = (int)eM_OriginPose[i] - (int)MotionZeroPos[i];
	}
	SendTGain();
	F_ERR_CODE = 0xff;
	for(i=0; i < 31; i++){					
		if(Motion.wCK[i].Exist){ Scene.wCK[i].Exist = 1; }
	}
	GetPose();
	if(F_ERR_CODE != 0xff)	return;
	trigger = 0;
	for(i=0; i < Motion.NumOfwCK; i++){
		if( abs((float)Scene.wCK[i].DPos - (float)Scene.wCK[i].SPos) > 5 ){
			trigger = 1;
			break;
		}
	}
	if(trigger){
		trigger = 0;
		Scene.NumOfFrame = NOF;
		Scene.RTime = RT;
	}
	else{
		Scene.NumOfFrame = 1;
		Scene.RTime = 20;
	}
	for(i=0; i < Motion.NumOfwCK; i++){
		if(PF == 0){			Scene.wCK[i].DPos = eM_OriginPose[i];}
		else if(PF == 1){Scene.wCK[i].DPos = fM1_BasicPose[i];}
		else if(PF == 2){Scene.wCK[i].DPos = fM2_BasicPose[i];}
		else if(PF == 3){Scene.wCK[i].DPos = fM3_BasicPose[i];}
		Scene.wCK[i].Torq		= TQ;
		Scene.wCK[i].ExPortD	= 1;
	}
	(PORTA &= 0xDF);
	SendExPortD();
	CalcFrameInterval();
	if(F_ERR_CODE != 0xff)	return;
	CalcUnitMove();
	MakeFrame();
	SendFrame();
	while(F_SCENE_PLAYING);
	if(F_MOTION_STOPPED == 1)	return;
	if(NOF > 1){
		delay_ms(800);
		GetPose();
		if(F_ERR_CODE != 0xff)	return;
		for(i=0; i < Motion.NumOfwCK; i++){
			if( abs((float)Scene.wCK[i].DPos - (float)Scene.wCK[i].SPos) > 10 ){
				F_ERR_CODE = 10;
				break;
			}
		}
	}
	(PORTA |= 0x20);
}
//------------------------------------------------------------------------------
// 현재 자세 읽기
//------------------------------------------------------------------------------
void GetPose(void)
{
	unsigned int	i, tmp;
	UCSR0B |= 0x80;
	UCSR0B &= 0xBF;
	for(i=0; i < 31; i++){
		if(Motion.wCK[i].Exist){
			tmp = PosRead(i);
			if(tmp == 444){
				tmp = PosRead(i);
				if(tmp == 444){
					tmp = PosRead(i);
					if(tmp == 444){
						F_ERR_CODE = 11;
						return;
					}
				}
			}
			Scene.wCK[i].SPos = (unsigned char)tmp;
		}
	}
}
//------------------------------------------------------------------------------
// 모션 트위닝 씬 실행
//------------------------------------------------------------------------------
void MotionTweenFlash(unsigned char GapMax)
{
	unsigned int	i;
	Scene.NumOfFrame = (unsigned int)GapMax;
	Scene.RTime = (unsigned int)GapMax*20;
	for(i=0;i<31;i++){
		Scene.wCK[i].Exist		= 0;
		Scene.wCK[i].DPos		= 0;
		Scene.wCK[i].Torq		= 0;
		Scene.wCK[i].ExPortD	= 0;
	}
	for(i=0;i<Motion.NumOfwCK;i++){
		Scene.wCK[wCK_IDs[i]].Exist		= 1;
		Scene.wCK[wCK_IDs[i]].DPos		= gpPos_Table[i];
		Scene.wCK[wCK_IDs[i]].Torq		= 3;
		Scene.wCK[wCK_IDs[i]].ExPortD	= 0;
	}
	UCSR0B &= 0x7F;
	UCSR0B |= 0x40;
	SendExPortD();
	CalcFrameInterval();
	if(F_ERR_CODE != 0xff)	return;
	CalcUnitMove();
	MakeFrame();
	SendFrame();
	while(F_SCENE_PLAYING);
	if(F_MOTION_STOPPED == 1)	return;
}
//------------------------------------------------------------------------------
// 모션 플레이(내부 Flash 데이터 이용)
//------------------------------------------------------------------------------
void M_PlayFlash(void)
{
	float	lGapMax = 0;
	unsigned int	i;
	if(F_CHARGING) return;
	GetMotionFromFlash();
	SendTGain();
	F_ERR_CODE = 0xff;
	GetPose();
	if(F_ERR_CODE != 0xff)	return;
	for(i=0;i<Motion.NumOfwCK;i++){
		if( abs((float)gpPos_Table[i]-(float)Scene.wCK[i].SPos) > lGapMax )
			lGapMax = abs((float)gpPos_Table[i]-(float)Scene.wCK[i].SPos);
		if(gpT_Table[i] == 6)
			lGapMax = 0;
	}
	if(lGapMax > 10)	MotionTweenFlash((unsigned char)(lGapMax/3));
	for(i=0; i < Motion.NumOfScene; i++){
		gScIdx = i;
		GetSceneFromFlash();
		SendExPortD();
		CalcFrameInterval();
		if(F_ERR_CODE != 0xff)	break;
		CalcUnitMove();
		MakeFrame();
		SendFrame();
		while(F_SCENE_PLAYING);
		if(F_MOTION_STOPPED == 1)	break;
	}
}
//------------------------------------------------------------------------------
// 모션 실행
//------------------------------------------------------------------------------
void M_Play(unsigned char BtnCode)
{
	if(BtnCode == 0x07		){
		if(0) (PORTB |= 0x40);else (PORTB &= 0xBF);
		delay_ms(20);
		if(1) (PORTB |= 0x40);else (PORTB &= 0xBF);
		delay_ms(20);
		BasicPose(F_PF, 50, 1000, 4);
		if(F_ERR_CODE != 0xff){
			gSEC_DCOUNT = 5;
			EIMSK &= 0xBF;
			while(gSEC_DCOUNT){
				if(g10MSEC == 0 || g10MSEC == 50){
					Get_VOLTAGE();
					DetectPower();
					IoUpdate();
				}
				if(g10MSEC < 25)		(PORTA &= 0x7F);
				else if(g10MSEC < 50)	(PORTA |= 0x80);
				else if(g10MSEC < 75)	(PORTA &= 0x7F);
				else if(g10MSEC < 100)	(PORTA |= 0x80);
			}
			F_ERR_CODE = 0xff;
			EIMSK |= 0x40;
		}
		return;
	}
	if(F_PF == 1){
		switch(BtnCode){
			case 0x01		:
			 	SendToSoundIC(7);
				gpT_Table	= HUNOBASIC_GETUPFRONT_Torque;
				gpE_Table	= HUNOBASIC_GETUPFRONT_Port;
				gpPg_Table 	= HUNOBASIC_GETUPFRONT_RuntimePGain;
				gpDg_Table 	= HUNOBASIC_GETUPFRONT_RuntimeDGain;
				gpIg_Table 	= HUNOBASIC_GETUPFRONT_RuntimeIGain;
				gpFN_Table	= HUNOBASIC_GETUPFRONT_Frames;
				gpRT_Table	= HUNOBASIC_GETUPFRONT_TrTime;
				gpPos_Table	= HUNOBASIC_GETUPFRONT_Position;
				Motion.NumOfScene = 9;
				Motion.NumOfwCK = 16;
				break;
			case 0x02		:
			 	SendToSoundIC(8);
				gpT_Table	= HUNOBASIC_GETUPBACK_Torque;
				gpE_Table	= HUNOBASIC_GETUPBACK_Port;
				gpPg_Table 	= HUNOBASIC_GETUPBACK_RuntimePGain;
				gpDg_Table 	= HUNOBASIC_GETUPBACK_RuntimeDGain;
				gpIg_Table 	= HUNOBASIC_GETUPBACK_RuntimeIGain;
				gpFN_Table	= HUNOBASIC_GETUPBACK_Frames;
				gpRT_Table	= HUNOBASIC_GETUPBACK_TrTime;
				gpPos_Table	= HUNOBASIC_GETUPBACK_Position;
				Motion.NumOfScene = 10;
				Motion.NumOfwCK = 16;
				break;
			case 0x03		:
			 	SendToSoundIC(4);
				gpT_Table	= HUNOBASIC_TURNLEFT_Torque;
				gpE_Table	= HUNOBASIC_TURNLEFT_Port;
				gpPg_Table 	= HUNOBASIC_TURNLEFT_RuntimePGain;
				gpDg_Table 	= HUNOBASIC_TURNLEFT_RuntimeDGain;
				gpIg_Table 	= HUNOBASIC_TURNLEFT_RuntimeIGain;
				gpFN_Table	= HUNOBASIC_TURNLEFT_Frames;
				gpRT_Table	= HUNOBASIC_TURNLEFT_TrTime;
				gpPos_Table	= HUNOBASIC_TURNLEFT_Position;
				Motion.NumOfScene = 6;
				Motion.NumOfwCK = 16;
				break;
			case 0x04		:
			 	SendToSoundIC(2);
				gpT_Table	= HUNOBASIC_WALKFORWARD_Torque;
				gpE_Table	= HUNOBASIC_WALKFORWARD_Port;
				gpPg_Table 	= HUNOBASIC_WALKFORWARD_RuntimePGain;
				gpDg_Table 	= HUNOBASIC_WALKFORWARD_RuntimeDGain;
				gpIg_Table 	= HUNOBASIC_WALKFORWARD_RuntimeIGain;
				gpFN_Table	= HUNOBASIC_WALKFORWARD_Frames;
				gpRT_Table	= HUNOBASIC_WALKFORWARD_TrTime;
				gpPos_Table	= HUNOBASIC_WALKFORWARD_Position;
				Motion.NumOfScene = 40;
				Motion.NumOfwCK = 16;
				break;
			case 0x05		:
			 	SendToSoundIC(4);
				gpT_Table	= HUNOBASIC_TURNRIGHT_Torque;
				gpE_Table	= HUNOBASIC_TURNRIGHT_Port;
				gpPg_Table 	= HUNOBASIC_TURNRIGHT_RuntimePGain;
				gpDg_Table 	= HUNOBASIC_TURNRIGHT_RuntimeDGain;
				gpIg_Table 	= HUNOBASIC_TURNRIGHT_RuntimeIGain;
				gpFN_Table	= HUNOBASIC_TURNRIGHT_Frames;
				gpRT_Table	= HUNOBASIC_TURNRIGHT_TrTime;
				gpPos_Table	= HUNOBASIC_TURNRIGHT_Position;
				Motion.NumOfScene = 6;
				Motion.NumOfwCK = 16;
				break;
			case 0x06		:
			 	SendToSoundIC(5);
				gpT_Table	= HUNOBASIC_SIDEWALKLEFT_Torque;
				gpE_Table	= HUNOBASIC_SIDEWALKLEFT_Port;
				gpPg_Table 	= HUNOBASIC_SIDEWALKLEFT_RuntimePGain;
				gpDg_Table 	= HUNOBASIC_SIDEWALKLEFT_RuntimeDGain;
				gpIg_Table 	= HUNOBASIC_SIDEWALKLEFT_RuntimeIGain;
				gpFN_Table	= HUNOBASIC_SIDEWALKLEFT_Frames;
				gpRT_Table	= HUNOBASIC_SIDEWALKLEFT_TrTime;
				gpPos_Table	= HUNOBASIC_SIDEWALKLEFT_Position;
				Motion.NumOfScene = 6;
				Motion.NumOfwCK = 16;
				break;
			case 0x08		:
			 	SendToSoundIC(5);
				gpT_Table	= HUNOBASIC_SIDEWALKRIGHT_Torque;
				gpE_Table	= HUNOBASIC_SIDEWALKRIGHT_Port;
				gpPg_Table 	= HUNOBASIC_SIDEWALKRIGHT_RuntimePGain;
				gpDg_Table 	= HUNOBASIC_SIDEWALKRIGHT_RuntimeDGain;
				gpIg_Table 	= HUNOBASIC_SIDEWALKRIGHT_RuntimeIGain;
				gpFN_Table	= HUNOBASIC_SIDEWALKRIGHT_Frames;
				gpRT_Table	= HUNOBASIC_SIDEWALKRIGHT_TrTime;
				gpPos_Table	= HUNOBASIC_SIDEWALKRIGHT_Position;
				Motion.NumOfScene = 6;
				Motion.NumOfwCK = 16;
				break;
			case 0x09		:
			 	SendToSoundIC(6);
				gpT_Table	= HUNOBASIC_PUNCHLEFT_Torque;
				gpE_Table	= HUNOBASIC_PUNCHLEFT_Port;
				gpPg_Table 	= HUNOBASIC_PUNCHLEFT_RuntimePGain;
				gpDg_Table 	= HUNOBASIC_PUNCHLEFT_RuntimeDGain;
				gpIg_Table 	= HUNOBASIC_PUNCHLEFT_RuntimeIGain;
				gpFN_Table	= HUNOBASIC_PUNCHLEFT_Frames;
				gpRT_Table	= HUNOBASIC_PUNCHLEFT_TrTime;
				gpPos_Table	= HUNOBASIC_PUNCHLEFT_Position;
				Motion.NumOfScene = 5;
				Motion.NumOfwCK = 16;
				break;
			case 0x0A		:
			 	SendToSoundIC(3);
				gpT_Table	= HUNOBASIC_WALKBACKWARD_Torque;
				gpE_Table	= HUNOBASIC_WALKBACKWARD_Port;
				gpPg_Table 	= HUNOBASIC_WALKBACKWARD_RuntimePGain;
				gpDg_Table 	= HUNOBASIC_WALKBACKWARD_RuntimeDGain;
				gpIg_Table 	= HUNOBASIC_WALKBACKWARD_RuntimeIGain;
				gpFN_Table	= HUNOBASIC_WALKBACKWARD_Frames;
				gpRT_Table	= HUNOBASIC_WALKBACKWARD_TrTime;
				gpPos_Table	= HUNOBASIC_WALKBACKWARD_Position;
				Motion.NumOfScene = 42;
				Motion.NumOfwCK = 16;
				break;
			case 0x0B		:
			 	SendToSoundIC(6);
				gpT_Table	= HUNOBASIC_PUNCHRIGHT_Torque;
				gpE_Table	= HUNOBASIC_PUNCHRIGHT_Port;
				gpPg_Table 	= HUNOBASIC_PUNCHRIGHT_RuntimePGain;
				gpDg_Table 	= HUNOBASIC_PUNCHRIGHT_RuntimeDGain;
				gpIg_Table 	= HUNOBASIC_PUNCHRIGHT_RuntimeIGain;
				gpFN_Table	= HUNOBASIC_PUNCHRIGHT_Frames;
				gpRT_Table	= HUNOBASIC_PUNCHRIGHT_TrTime;
				gpPos_Table	= HUNOBASIC_PUNCHRIGHT_Position;
				Motion.NumOfScene = 5;
				Motion.NumOfwCK = 16;
				break;
			case 0x15		:
				gpT_Table	= MY_DEMO1_Torque;
				gpE_Table	= MY_DEMO1_Port;
				gpPg_Table 	= MY_DEMO1_RuntimePGain;
				gpDg_Table 	= MY_DEMO1_RuntimeDGain;
				gpIg_Table 	= MY_DEMO1_RuntimeIGain;
				gpFN_Table	= MY_DEMO1_Frames;
				gpRT_Table	= MY_DEMO1_TrTime;
				gpPos_Table	= MY_DEMO1_Position;
				Motion.NumOfScene = 5;
				Motion.NumOfwCK = 16;
				break;
			default:
				return;
		}
	}
	else if(F_PF == 2){
		switch(BtnCode){
			case 0x01		:
	 			SendToSoundIC(13);
				gpT_Table	= DinoBasic_GetupFront_Torque;
				gpE_Table	= DinoBasic_GetupFront_Port;
				gpPg_Table 	= DinoBasic_GetupFront_RuntimePGain;
				gpDg_Table 	= DinoBasic_GetupFront_RuntimeDGain;
				gpIg_Table 	= DinoBasic_GetupFront_RuntimeIGain;
				gpFN_Table	= DinoBasic_GetupFront_Frames;
				gpRT_Table	= DinoBasic_GetupFront_TrTime;
				gpPos_Table	= DinoBasic_GetupFront_Position;
				Motion.NumOfScene = 6;
				Motion.NumOfwCK = 16;
				break;
			case 0x02		:
	 			SendToSoundIC(13);
				gpT_Table	= DinoBasic_GetupBack_Torque;
				gpE_Table	= DinoBasic_GetupBack_Port;
				gpPg_Table 	= DinoBasic_GetupBack_RuntimePGain;
				gpDg_Table 	= DinoBasic_GetupBack_RuntimeDGain;
				gpIg_Table 	= DinoBasic_GetupBack_RuntimeIGain;
				gpFN_Table	= DinoBasic_GetupBack_Frames;
				gpRT_Table	= DinoBasic_GetupBack_TrTime;
				gpPos_Table	= DinoBasic_GetupBack_Position;
				Motion.NumOfScene = 6;
				Motion.NumOfwCK = 16;
				break;
			case 0x03		:
			 	SendToSoundIC(13);
				gpT_Table	= DinoBasic_TurnLeft_Torque;
				gpE_Table	= DinoBasic_TurnLeft_Port;
				gpPg_Table 	= DinoBasic_TurnLeft_RuntimePGain;
				gpDg_Table 	= DinoBasic_TurnLeft_RuntimeDGain;
				gpIg_Table 	= DinoBasic_TurnLeft_RuntimeIGain;
				gpFN_Table	= DinoBasic_TurnLeft_Frames;
				gpRT_Table	= DinoBasic_TurnLeft_TrTime;
				gpPos_Table	= DinoBasic_TurnLeft_Position;
				Motion.NumOfScene = 6;
				Motion.NumOfwCK = 16;
				break;
			case 0x04		:
			 	SendToSoundIC(14);
				gpT_Table	= DinoBasic_WalkForward_Torque;
				gpE_Table	= DinoBasic_WalkForward_Port;
				gpPg_Table 	= DinoBasic_WalkForward_RuntimePGain;
				gpDg_Table 	= DinoBasic_WalkForward_RuntimeDGain;
				gpIg_Table 	= DinoBasic_WalkForward_RuntimeIGain;
				gpFN_Table	= DinoBasic_WalkForward_Frames;
				gpRT_Table	= DinoBasic_WalkForward_TrTime;
				gpPos_Table	= DinoBasic_WalkForward_Position;
				Motion.NumOfScene = 42;
				Motion.NumOfwCK = 16;
				break;
			case 0x05		:
			 	SendToSoundIC(13);
				gpT_Table	= DinoBasic_TurnRight_Torque;
				gpE_Table	= DinoBasic_TurnRight_Port;
				gpPg_Table 	= DinoBasic_TurnRight_RuntimePGain;
				gpDg_Table 	= DinoBasic_TurnRight_RuntimeDGain;
				gpIg_Table 	= DinoBasic_TurnRight_RuntimeIGain;
				gpFN_Table	= DinoBasic_TurnRight_Frames;
				gpRT_Table	= DinoBasic_TurnRight_TrTime;
				gpPos_Table	= DinoBasic_TurnRight_Position;
				Motion.NumOfScene = 7;
				Motion.NumOfwCK = 16;
				break;
			case 0x06		:
			 	SendToSoundIC(13);
				gpT_Table	= DinoBasic_SidewalkLeft_Torque;
				gpE_Table	= DinoBasic_SidewalkLeft_Port;
				gpPg_Table 	= DinoBasic_SidewalkLeft_RuntimePGain;
				gpDg_Table 	= DinoBasic_SidewalkLeft_RuntimeDGain;
				gpIg_Table 	= DinoBasic_SidewalkLeft_RuntimeIGain;
				gpFN_Table	= DinoBasic_SidewalkLeft_Frames;
				gpRT_Table	= DinoBasic_SidewalkLeft_TrTime;
				gpPos_Table	= DinoBasic_SidewalkLeft_Position;
				Motion.NumOfScene = 6;
				Motion.NumOfwCK = 16;
				break;
			case 0x08		:
			 	SendToSoundIC(13);
				gpT_Table	= DinoBasic_SidewalkRight_Torque;
				gpE_Table	= DinoBasic_SidewalkRight_Port;
				gpPg_Table 	= DinoBasic_SidewalkRight_RuntimePGain;
				gpDg_Table 	= DinoBasic_SidewalkRight_RuntimeDGain;
				gpIg_Table 	= DinoBasic_SidewalkRight_RuntimeIGain;
				gpFN_Table	= DinoBasic_SidewalkRight_Frames;
				gpRT_Table	= DinoBasic_SidewalkRight_TrTime;
				gpPos_Table	= DinoBasic_SidewalkRight_Position;
				Motion.NumOfScene = 6;
				Motion.NumOfwCK = 16;
				break;
			case 0x09		:
			 	SendToSoundIC(13);
				gpT_Table	= DinoBasic_PunchLeft_Torque;
				gpE_Table	= DinoBasic_PunchLeft_Port;
				gpPg_Table 	= DinoBasic_PunchLeft_RuntimePGain;
				gpDg_Table 	= DinoBasic_PunchLeft_RuntimeDGain;
				gpIg_Table 	= DinoBasic_PunchLeft_RuntimeIGain;
				gpFN_Table	= DinoBasic_PunchLeft_Frames;
				gpRT_Table	= DinoBasic_PunchLeft_TrTime;
				gpPos_Table	= DinoBasic_PunchLeft_Position;
				Motion.NumOfScene = 4;
				Motion.NumOfwCK = 16;
				break;
			case 0x0A		:
			 	SendToSoundIC(13);
				gpT_Table	= DinoBasic_WalkBackward_Torque;
				gpE_Table	= DinoBasic_WalkBackward_Port;
				gpPg_Table 	= DinoBasic_WalkBackward_RuntimePGain;
				gpDg_Table 	= DinoBasic_WalkBackward_RuntimeDGain;
				gpIg_Table 	= DinoBasic_WalkBackward_RuntimeIGain;
				gpFN_Table	= DinoBasic_WalkBackward_Frames;
				gpRT_Table	= DinoBasic_WalkBackward_TrTime;
				gpPos_Table	= DinoBasic_WalkBackward_Position;
				Motion.NumOfScene = 42;
				Motion.NumOfwCK = 16;
				break;
			case 0x0B		:
			 	SendToSoundIC(13);
				gpT_Table	= DinoBasic_PunchRight_Torque;
				gpE_Table	= DinoBasic_PunchRight_Port;
				gpPg_Table 	= DinoBasic_PunchRight_RuntimePGain;
				gpDg_Table 	= DinoBasic_PunchRight_RuntimeDGain;
				gpIg_Table 	= DinoBasic_PunchRight_RuntimeIGain;
				gpFN_Table	= DinoBasic_PunchRight_Frames;
				gpRT_Table	= DinoBasic_PunchRight_TrTime;
				gpPos_Table	= DinoBasic_PunchRight_Position;
				Motion.NumOfScene = 4;
				Motion.NumOfwCK = 16;
				break;
			default:
				return;
		}
	}
	else if(F_PF == 3){
		switch(BtnCode){
			case 0x01		:
	 			SendToSoundIC(12);
				gpT_Table	= DogyBasic_GetupFront_Torque;
				gpE_Table	= DogyBasic_GetupFront_Port;
				gpPg_Table 	= DogyBasic_GetupFront_RuntimePGain;
				gpDg_Table 	= DogyBasic_GetupFront_RuntimeDGain;
				gpIg_Table 	= DogyBasic_GetupFront_RuntimeIGain;
				gpFN_Table	= DogyBasic_GetupFront_Frames;
				gpRT_Table	= DogyBasic_GetupFront_TrTime;
				gpPos_Table	= DogyBasic_GetupFront_Position;
				Motion.NumOfScene = 5;
				Motion.NumOfwCK = 16;
				break;
			case 0x02		:
	 			SendToSoundIC(12);
				gpT_Table	= DogyBasic_GetupBack_Torque;
				gpE_Table	= DogyBasic_GetupBack_Port;
				gpPg_Table 	= DogyBasic_GetupBack_RuntimePGain;
				gpDg_Table 	= DogyBasic_GetupBack_RuntimeDGain;
				gpIg_Table 	= DogyBasic_GetupBack_RuntimeIGain;
				gpFN_Table	= DogyBasic_GetupBack_Frames;
				gpRT_Table	= DogyBasic_GetupBack_TrTime;
				gpPos_Table	= DogyBasic_GetupBack_Position;
				Motion.NumOfScene = 5;
				Motion.NumOfwCK = 16;
				break;
			case 0x03		:
			 	SendToSoundIC(11);
				gpT_Table	= DogyBasic_TurnLeft_Torque;
				gpE_Table	= DogyBasic_TurnLeft_Port;
				gpPg_Table 	= DogyBasic_TurnLeft_RuntimePGain;
				gpDg_Table 	= DogyBasic_TurnLeft_RuntimeDGain;
				gpIg_Table 	= DogyBasic_TurnLeft_RuntimeIGain;
				gpFN_Table	= DogyBasic_TurnLeft_Frames;
				gpRT_Table	= DogyBasic_TurnLeft_TrTime;
				gpPos_Table	= DogyBasic_TurnLeft_Position;
				Motion.NumOfScene = 10;
				Motion.NumOfwCK = 16;
				break;
			case 0x04		:
			 	SendToSoundIC(10);
				gpT_Table	= DogyBasic_WalkForward_Torque;
				gpE_Table	= DogyBasic_WalkForward_Port;
				gpPg_Table 	= DogyBasic_WalkForward_RuntimePGain;
				gpDg_Table 	= DogyBasic_WalkForward_RuntimeDGain;
				gpIg_Table 	= DogyBasic_WalkForward_RuntimeIGain;
				gpFN_Table	= DogyBasic_WalkForward_Frames;
				gpRT_Table	= DogyBasic_WalkForward_TrTime;
				gpPos_Table	= DogyBasic_WalkForward_Position;
				Motion.NumOfScene = 51;
				Motion.NumOfwCK = 16;
				break;
			case 0x05		:
			 	SendToSoundIC(11);
				gpT_Table	= DogyBasic_TurnRight_Torque;
				gpE_Table	= DogyBasic_TurnRight_Port;
				gpPg_Table 	= DogyBasic_TurnRight_RuntimePGain;
				gpDg_Table 	= DogyBasic_TurnRight_RuntimeDGain;
				gpIg_Table 	= DogyBasic_TurnRight_RuntimeIGain;
				gpFN_Table	= DogyBasic_TurnRight_Frames;
				gpRT_Table	= DogyBasic_TurnRight_TrTime;
				gpPos_Table	= DogyBasic_TurnRight_Position;
				Motion.NumOfScene = 10;
				Motion.NumOfwCK = 16;
				break;
			case 0x06		:
			 	SendToSoundIC(11);
				gpT_Table	= DogyBasic_SidewalkLeft_Torque;
				gpE_Table	= DogyBasic_SidewalkLeft_Port;
				gpPg_Table 	= DogyBasic_SidewalkLeft_RuntimePGain;
				gpDg_Table 	= DogyBasic_SidewalkLeft_RuntimeDGain;
				gpIg_Table 	= DogyBasic_SidewalkLeft_RuntimeIGain;
				gpFN_Table	= DogyBasic_SidewalkLeft_Frames;
				gpRT_Table	= DogyBasic_SidewalkLeft_TrTime;
				gpPos_Table	= DogyBasic_SidewalkLeft_Position;
				Motion.NumOfScene = 20;
				Motion.NumOfwCK = 16;
				break;
			case 0x08		:
			 	SendToSoundIC(11);
				gpT_Table	= DogyBasic_SidewalkRight_Torque;
				gpE_Table	= DogyBasic_SidewalkRight_Port;
				gpPg_Table 	= DogyBasic_SidewalkRight_RuntimePGain;
				gpDg_Table 	= DogyBasic_SidewalkRight_RuntimeDGain;
				gpIg_Table 	= DogyBasic_SidewalkRight_RuntimeIGain;
				gpFN_Table	= DogyBasic_SidewalkRight_Frames;
				gpRT_Table	= DogyBasic_SidewalkRight_TrTime;
				gpPos_Table	= DogyBasic_SidewalkRight_Position;
				Motion.NumOfScene = 20;
				Motion.NumOfwCK = 16;
				break;
			case 0x09		:
			 	SendToSoundIC(11);
				gpT_Table	= DogyBasic_PunchLeft_Torque;
				gpE_Table	= DogyBasic_PunchLeft_Port;
				gpPg_Table 	= DogyBasic_PunchLeft_RuntimePGain;
				gpDg_Table 	= DogyBasic_PunchLeft_RuntimeDGain;
				gpIg_Table 	= DogyBasic_PunchLeft_RuntimeIGain;
				gpFN_Table	= DogyBasic_PunchLeft_Frames;
				gpRT_Table	= DogyBasic_PunchLeft_TrTime;
				gpPos_Table	= DogyBasic_PunchLeft_Position;
				Motion.NumOfScene = 4;
				Motion.NumOfwCK = 16;
				break;
			case 0x0A		:
			 	SendToSoundIC(11);
				gpT_Table	= DogyBasic_WalkBackward_Torque;
				gpE_Table	= DogyBasic_WalkBackward_Port;
				gpPg_Table 	= DogyBasic_WalkBackward_RuntimePGain;
				gpDg_Table 	= DogyBasic_WalkBackward_RuntimeDGain;
				gpIg_Table 	= DogyBasic_WalkBackward_RuntimeIGain;
				gpFN_Table	= DogyBasic_WalkBackward_Frames;
				gpRT_Table	= DogyBasic_WalkBackward_TrTime;
				gpPos_Table	= DogyBasic_WalkBackward_Position;
				Motion.NumOfScene = 20;
				Motion.NumOfwCK = 16;
				break;
			case 0x0B		:
			 	SendToSoundIC(11);
				gpT_Table	= DogyBasic_PunchRight_Torque;
				gpE_Table	= DogyBasic_PunchRight_Port;
				gpPg_Table 	= DogyBasic_PunchRight_RuntimePGain;
				gpDg_Table 	= DogyBasic_PunchRight_RuntimeDGain;
				gpIg_Table 	= DogyBasic_PunchRight_RuntimeIGain;
				gpFN_Table	= DogyBasic_PunchRight_Frames;
				gpRT_Table	= DogyBasic_PunchRight_TrTime;
				gpPos_Table	= DogyBasic_PunchRight_Position;
				Motion.NumOfScene = 4;
				Motion.NumOfwCK = 16;
				break;
			default:
				return;
		}
	}
	else if(F_PF == 4){
		return;
	}
	Motion.PF = F_PF;
	M_PlayFlash();
}
